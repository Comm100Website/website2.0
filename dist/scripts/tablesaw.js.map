{"version":3,"sources":["../assets/scripts/tablesaw.js","../assets/scripts/tablesaw-init.js"],"names":["factory","define","amd","module","exports","shoestring","prim","sec","sel","pType","ret","Shoestring","call","ready","constructor","indexOf","dfrag","doc","createElement","innerHTML","children","each","removeChild","this","find","querySelectorAll","Object","prototype","toString","win","NodeList","Array","_checkElements","needles","haystack","j","length","initEventCache","el","evt","shoestringData","events","loop","addToEventCache","eventInfo","obj","isCustomEvent","callback","callfunc","originalCallback","namespace","push","customEventLoop","unbind","bound","jl","matched","undefined","removeEventListener","splice","unbindAll","evtKey","window","document","selector","merge","reverse","fn","extend","first","second","i","hasOwnProperty","len","collection","il","inArray","needle","isin","readyQueue","runReady","shift","attachEvent","readyState","addEventListener","is","parents","check","self","parent","e","data","name","value","removeData","$","addClass","className","classes","replace","split","match","RegExp","add","append","fragment","nodeType","appendChild","cloneNode","appendTo","attr","nameStr","getAttribute","setAttribute","before","parentNode","insertBefore","childs","closest","element","parentElement","cssExceptions","float","convertPropertyName","str","character","toUpperCase","_getStyle","property","getComputedStyle","getPropertyValue","vendorPrefixes","convert","k","_setStyle","convertedProperty","style","css","key","eq","index","filter","wsel","context","createDocumentFragment","finds","concat","get","elements","set","html","h","l","outerHTML","pile","_getIndex","test","result","item","documentElement","childNodes","last","next","found","not","prepend","insertEl","firstChild","prev","prevAll","$previous","removeAttr","removeAttribute","removeClass","cname","newClassName","regex","remove","replaceWith","clone","replaceChild","nextSibling","siblings","sibs","getText","elem","node","textContent","nodeValue","text","val","tagName","optionSet","option","newIndex","options","values","selected","selectedIndex","_dimension","offsetName","letter","width","wrapInner","inH","bind","encasedCallback","triggeredElement","_namespace","returnTrue","isDefaultPrevented","originalPreventDefault","preventDefault","target","srcElement","returnValue","stopPropagation","cancelBubble","apply","_args","evts","domEventCallback","customEventCallback","oEl","originalEvent","ssEventTrigger","on","event","off","one","thisevt","cbs","$t","triggerHandler","args","createEvent","bindings","initEvent","unshift","trigger","type","click","dispatchEvent","root","Tablesaw","require","domContentLoadedTriggered","i18n","modeStack","modeSwipe","modeToggle","modeSwitchColumnsAbbreviated","modeSwitchColumns","columnToggleButton","columnToggleError","sort","swipePreviousColumn","swipeNextColumn","mustard","blackberry","WebKitPoint","operamini","_init","init","TablesawConfig","modes","toolbar","create","destroy","refresh","resize","defaultConfig","Table","Error","table","$table","$thead","$tbody","mode","$toolbar","attributes","subrow","ignorerow","pluginName","Math","round","random","createToolbar","_initCells","getConfig","pluginSpecificConfig","configs","_getPrimaryHeaderRow","_getHeaderRows","_getRowIndex","$row","_getHeaderRowIndeces","indeces","_getPrimaryHeaderCells","_$getCells","th","cells","hasColspan","_getVisibleColspan","colspan","parseInt","getColspanForCell","$cell","visibleColspan","visibleSiblingColumns","colColspan","isCellInColumn","header","cell","updateColspanCells","cls","userAction","primaryHeaderRow","rowspan","maxColspan","_findPrimaryHeadersForCell","$headerRow","headerRowIndex","results","rowNumber","headerMapping","colNumber","getRows","getBodyRows","tbody","getHeaderCellIndex","lookup","colIndex","$rows","columnLookup","coltally","headerRowIndeces","headerIndex","rowCell","headerCol","_getToolbarAnchor","$parent","_getToolbar","$anchor","tableId","$doc","$target","scrollTimeout","isScrolling","clearTimeout","setTimeout","resizeTimeout","stackTable","cellLabels","cellContentLabels","attrs","labelless","hideempty","Stack","tablesaw","$newHeader","$header","$sortableButton","$checkall","createTextNode","$label","methods","_create","getElementsByTagName","_select","update","opts","label","opt","nodeName","arrg","a","b","c","ColumnToggle","btnTarget","columnToggleTable","columnBtnContain","columnBtn","popup","priorityPrefix","$headers","initSet","onToggleCheckboxChange","checkbox","checked","getHeaderFromCheckbox","$cells","closePopup","$menuButton","$btnContain","openPopup","closeTimeout","id","$popup","$menu","cfg","getColumnToggleLabelTemplate","hasNonPersistentHeaders","$this","priority","$btnTarget","$overflow","timeout","$div","refreshToggle","getSortValue","$el","join","initSelector","sortableSwitchSelector","sortCol","defaultCol","numericCol","subRow","ignoreRow","head","ascend","descend","switcher","tableToolbar","sortButton","o","clearOthers","headcells","v","col","headsOnAction","headCell","newSortValue","heads","$switcher","tblsaw","idx","isDefaultCol","isDescending","hasNumericAttribute","numericCount","slice","isNaN","isNumeric","$firstChild","tablesawbtn","sortRows","rows","colNum","ascending","sorted","cellArr","belongingToTbody","row","subrows","$next","ignored","customFn","forceNumeric","parseFloat","toLowerCase","newRows","makeColDefault","sortBy","tbl","sortedRows","map","returnVal","arguments","createSwipeTable","initMinHeaderWidths","hiddenCol","headerWidths","$headerCells","offsetWidth","showColumn","headerCell","hideColumn","persistColumn","persistCol","isPersistent","unmaintainWidths","persistWidths","maintainWidths","newHash","prefix","styles","tableWidth","hash","$style","$head","getNext","checkFound","$headerCellsNoPersist","isHidden","getPrev","nextpair","fwd","canAdvance","pair","matchesMedia","matchMedia","matches","fakeBreakpoints","containerWidth","persist","sum","sums","visibleNonPersistantCount","isPersist","needsNonPersistentColumn","advance","getCoord","touches","$btns","$prevBtn","$nextBtn","disableTouchEvents","x","y","originX","originY","scrollTop","pageYOffset","swipeHorizontalThreshold","swipeVerticalThreshold","verticalThreshold","swipe","horizontalThreshold","isPageScrolled","abs","canGoPrev","canGoNext","hideBtn","allColumnsVisible","createMiniMap","showHideNav","MiniMap","show","dots","$dotNav","hideDot","mq","S","selectors","excludeMode","main","isSelected","ignoreMode","dataMode","$otherToolbarItems","onModeChange","CheckAll","checkAllSelector","forceCheckedSelector","forceUncheckedSelector","checkboxSelector","$triggers","$checkboxes","_filterCells","getCheckboxesForButton","button","getCheckboxesForCheckbox","addCheckboxEvents","addButtonEvents","allChecked","setChecked","checkedCount","allSelected","indeterminate"],"mappings":"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","file":"tablesaw.js","sourcesContent":["/* jshint ignore:start */\n\n/*! Tablesaw - v3.1.0 - 2018-12-10\n* https://github.com/filamentgroup/tablesaw\n* Copyright (c) 2018 Filament Group; Licensed MIT */\n/*! Shoestring - v2.0.0 - 2017-02-14\n* http://github.com/filamentgroup/shoestring/\n* Copyright (c) 2017 Scott Jehl, Filament Group, Inc; Licensed MIT & GPLv2 */ \n(function( factory ) {\n\tif( typeof define === 'function' && define.amd ) {\n\t\t\t// AMD. Register as an anonymous module.\n\t\t\tdefine( [ 'shoestring' ], factory );\n\t} else if (typeof module === 'object' && module.exports) {\n\t\t// Node/CommonJS\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals\n\t\tfactory();\n\t}\n}(function () {\n\tvar win = typeof window !== \"undefined\" ? window : this;\n\tvar doc = win.document;\n\n\n\t/**\n\t * The shoestring object constructor.\n\t *\n\t * @param {string,object} prim The selector to find or element to wrap.\n\t * @param {object} sec The context in which to match the `prim` selector.\n\t * @returns shoestring\n\t * @this window\n\t */\n\tfunction shoestring( prim, sec ){\n\t\tvar pType = typeof( prim ),\n\t\t\t\tret = [],\n\t\t\t\tsel;\n\n\t\t// return an empty shoestring object\n\t\tif( !prim ){\n\t\t\treturn new Shoestring( ret );\n\t\t}\n\n\t\t// ready calls\n\t\tif( prim.call ){\n\t\t\treturn shoestring.ready( prim );\n\t\t}\n\n\t\t// handle re-wrapping shoestring objects\n\t\tif( prim.constructor === Shoestring && !sec ){\n\t\t\treturn prim;\n\t\t}\n\n\t\t// if string starting with <, make html\n\t\tif( pType === \"string\" && prim.indexOf( \"<\" ) === 0 ){\n\t\t\tvar dfrag = doc.createElement( \"div\" );\n\n\t\t\tdfrag.innerHTML = prim;\n\n\t\t\t// TODO depends on children (circular)\n\t\t\treturn shoestring( dfrag ).children().each(function(){\n\t\t\t\tdfrag.removeChild( this );\n\t\t\t});\n\t\t}\n\n\t\t// if string, it's a selector, use qsa\n\t\tif( pType === \"string\" ){\n\t\t\tif( sec ){\n\t\t\t\treturn shoestring( sec ).find( prim );\n\t\t\t}\n\n\t\t\t\tsel = doc.querySelectorAll( prim );\n\n\t\t\treturn new Shoestring( sel, prim );\n\t\t}\n\n\t\t// array like objects or node lists\n\t\tif( Object.prototype.toString.call( pType ) === '[object Array]' ||\n\t\t\t\t(win.NodeList && prim instanceof win.NodeList) ){\n\n\t\t\treturn new Shoestring( prim, prim );\n\t\t}\n\n\t\t// if it's an array, use all the elements\n\t\tif( prim.constructor === Array ){\n\t\t\treturn new Shoestring( prim, prim );\n\t\t}\n\n\t\t// otherwise assume it's an object the we want at an index\n\t\treturn new Shoestring( [prim], prim );\n\t}\n\n\tvar Shoestring = function( ret, prim ) {\n\t\tthis.length = 0;\n\t\tthis.selector = prim;\n\t\tshoestring.merge(this, ret);\n\t};\n\n\t// TODO only required for tests\n\tShoestring.prototype.reverse = [].reverse;\n\n\t// For adding element set methods\n\tshoestring.fn = Shoestring.prototype;\n\n\tshoestring.Shoestring = Shoestring;\n\n\t// For extending objects\n\t// TODO move to separate module when we use prototypes\n\tshoestring.extend = function( first, second ){\n\t\tfor( var i in second ){\n\t\t\tif( second.hasOwnProperty( i ) ){\n\t\t\t\tfirst[ i ] = second[ i ];\n\t\t\t}\n\t\t}\n\n\t\treturn first;\n\t};\n\n\t// taken directly from jQuery\n\tshoestring.merge = function( first, second ) {\n\t\tvar len, j, i;\n\n\t\tlen = +second.length,\n\t\tj = 0,\n\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t};\n\n\t// expose\n\twin.shoestring = shoestring;\n\n\n\n\t/**\n\t * Iterates over `shoestring` collections.\n\t *\n\t * @param {function} callback The callback to be invoked on each element and index\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.each = function( callback ){\n\t\treturn shoestring.each( this, callback );\n\t};\n\n\tshoestring.each = function( collection, callback ) {\n\t\tvar val;\n\t\tfor( var i = 0, il = collection.length; i < il; i++ ){\n\t\t\tval = callback.call( collection[i], i, collection[i] );\n\t\t\tif( val === false ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn collection;\n\t};\n\n\n\n  /**\n\t * Check for array membership.\n\t *\n\t * @param {object} needle The thing to find.\n\t * @param {object} haystack The thing to find the needle in.\n\t * @return {boolean}\n\t * @this window\n\t */\n\tshoestring.inArray = function( needle, haystack ){\n\t\tvar isin = -1;\n\t\tfor( var i = 0, il = haystack.length; i < il; i++ ){\n\t\t\tif( haystack.hasOwnProperty( i ) && haystack[ i ] === needle ){\n\t\t\t\tisin = i;\n\t\t\t}\n\t\t}\n\t\treturn isin;\n\t};\n\n\n\n  /**\n\t * Bind callbacks to be run when the DOM is \"ready\".\n\t *\n\t * @param {function} fn The callback to be run\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.ready = function( fn ){\n\t\tif( ready && fn ){\n\t\t\tfn.call( doc );\n\t\t}\n\t\telse if( fn ){\n\t\t\treadyQueue.push( fn );\n\t\t}\n\t\telse {\n\t\t\trunReady();\n\t\t}\n\n\t\treturn [doc];\n\t};\n\n\t// TODO necessary?\n\tshoestring.fn.ready = function( fn ){\n\t\tshoestring.ready( fn );\n\t\treturn this;\n\t};\n\n\t// Empty and exec the ready queue\n\tvar ready = false,\n\t\treadyQueue = [],\n\t\trunReady = function(){\n\t\t\tif( !ready ){\n\t\t\t\twhile( readyQueue.length ){\n\t\t\t\t\treadyQueue.shift().call( doc );\n\t\t\t\t}\n\t\t\t\tready = true;\n\t\t\t}\n\t\t};\n\n\t// If DOM is already ready at exec time, depends on the browser.\n\t// From: https://github.com/mobify/mobifyjs/blob/526841be5509e28fc949038021799e4223479f8d/src/capture.js#L128\n\tif (doc.attachEvent ? doc.readyState === \"complete\" : doc.readyState !== \"loading\") {\n\t\trunReady();\n\t} else {\n\t\tdoc.addEventListener( \"DOMContentLoaded\", runReady, false );\n\t\tdoc.addEventListener( \"readystatechange\", runReady, false );\n\t\twin.addEventListener( \"load\", runReady, false );\n\t}\n\n\n\n  /**\n\t * Checks the current set of elements against the selector, if one matches return `true`.\n\t *\n\t * @param {string} selector The selector to check.\n\t * @return {boolean}\n\t * @this {shoestring}\n\t */\n\tshoestring.fn.is = function( selector ){\n\t\tvar ret = false, self = this, parents, check;\n\n\t\t// assume a dom element\n\t\tif( typeof selector !== \"string\" ){\n\t\t\t// array-like, ie shoestring objects or element arrays\n\t\t\tif( selector.length && selector[0] ){\n\t\t\t\tcheck = selector;\n\t\t\t} else {\n\t\t\t\tcheck = [selector];\n\t\t\t}\n\n\t\t\treturn _checkElements(this, check);\n\t\t}\n\n\t\tparents = this.parent();\n\n\t\tif( !parents.length ){\n\t\t\tparents = shoestring( doc );\n\t\t}\n\n\t\tparents.each(function( i, e ) {\n\t\t\tvar children;\n\n\t\t\t\t\tchildren = e.querySelectorAll( selector );\n\n\t\t\tret = _checkElements( self, children );\n\t\t});\n\n\t\treturn ret;\n\t};\n\n\tfunction _checkElements(needles, haystack){\n\t\tvar ret = false;\n\n\t\tneedles.each(function() {\n\t\t\tvar j = 0;\n\n\t\t\twhile( j < haystack.length ){\n\t\t\t\tif( this === haystack[j] ){\n\t\t\t\t\tret = true;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\n\n\t/**\n\t * Get data attached to the first element or set data values on all elements in the current set.\n\t *\n\t * @param {string} name The data attribute name.\n\t * @param {any} value The value assigned to the data attribute.\n\t * @return {any|shoestring}\n\t * @this shoestring\n\t */\n\tshoestring.fn.data = function( name, value ){\n\t\tif( name !== undefined ){\n\t\t\tif( value !== undefined ){\n\t\t\t\treturn this.each(function(){\n\t\t\t\t\tif( !this.shoestringData ){\n\t\t\t\t\t\tthis.shoestringData = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.shoestringData[ name ] = value;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( this[ 0 ] ) {\n\t\t\t\t\tif( this[ 0 ].shoestringData ) {\n\t\t\t\t\t\treturn this[ 0 ].shoestringData[ name ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn this[ 0 ] ? this[ 0 ].shoestringData || {} : undefined;\n\t\t}\n\t};\n\n\n\t/**\n\t * Remove data associated with `name` or all the data, for each element in the current set.\n\t *\n\t * @param {string} name The data attribute name.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.removeData = function( name ){\n\t\treturn this.each(function(){\n\t\t\tif( name !== undefined && this.shoestringData ){\n\t\t\t\tthis.shoestringData[ name ] = undefined;\n\t\t\t\tdelete this.shoestringData[ name ];\n\t\t\t}\telse {\n\t\t\t\tthis[ 0 ].shoestringData = {};\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\t/**\n\t * An alias for the `shoestring` constructor.\n\t */\n\twin.$ = shoestring;\n\n\n\n\t/**\n\t * Add a class to each DOM element in the set of elements.\n\t *\n\t * @param {string} className The name of the class to be added.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.addClass = function( className ){\n\t\tvar classes = className.replace(/^\\s+|\\s+$/g, '').split( \" \" );\n\n\t\treturn this.each(function(){\n\t\t\tfor( var i = 0, il = classes.length; i < il; i++ ){\n\t\t\t\tif( this.className !== undefined &&\n\t\t\t\t\t\t(this.className === \"\" ||\n\t\t\t\t\t\t!this.className.match( new RegExp( \"(^|\\\\s)\" + classes[ i ] + \"($|\\\\s)\"))) ){\n\t\t\t\t\tthis.className += \" \" + classes[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n\n  /**\n\t * Add elements matching the selector to the current set.\n\t *\n\t * @param {string} selector The selector for the elements to add from the DOM\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.add = function( selector ){\n\t\tvar ret = [];\n\t\tthis.each(function(){\n\t\t\tret.push( this );\n\t\t});\n\n\t\tshoestring( selector ).each(function(){\n\t\t\tret.push( this );\n\t\t});\n\n\t\treturn shoestring( ret );\n\t};\n\n\n\n\t/**\n\t * Insert an element or HTML string as the last child of each element in the set.\n\t *\n\t * @param {string|HTMLElement} fragment The HTML or HTMLElement to insert.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.append = function( fragment ){\n\t\tif( typeof( fragment ) === \"string\" || fragment.nodeType !== undefined ){\n\t\t\tfragment = shoestring( fragment );\n\t\t}\n\n\t\treturn this.each(function( i ){\n\t\t\tfor( var j = 0, jl = fragment.length; j < jl; j++ ){\n\t\t\t\tthis.appendChild( i > 0 ? fragment[ j ].cloneNode( true ) : fragment[ j ] );\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\t/**\n\t * Insert the current set as the last child of the elements matching the selector.\n\t *\n\t * @param {string} selector The selector after which to append the current set.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.appendTo = function( selector ){\n\t\treturn this.each(function(){\n\t\t\tshoestring( selector ).append( this );\n\t\t});\n\t};\n\n\n\n  /**\n\t * Get the value of the first element of the set or set the value of all the elements in the set.\n\t *\n\t * @param {string} name The attribute name.\n\t * @param {string} value The new value for the attribute.\n\t * @return {shoestring|string|undefined}\n\t * @this {shoestring}\n\t */\n\tshoestring.fn.attr = function( name, value ){\n\t\tvar nameStr = typeof( name ) === \"string\";\n\n\t\tif( value !== undefined || !nameStr ){\n\t\t\treturn this.each(function(){\n\t\t\t\tif( nameStr ){\n\t\t\t\t\tthis.setAttribute( name, value );\n\t\t\t\t}\telse {\n\t\t\t\t\tfor( var i in name ){\n\t\t\t\t\t\tif( name.hasOwnProperty( i ) ){\n\t\t\t\t\t\t\tthis.setAttribute( i, name[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\treturn this[ 0 ] ? this[ 0 ].getAttribute( name ) : undefined;\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Insert an element or HTML string before each element in the current set.\n\t *\n\t * @param {string|HTMLElement} fragment The HTML or HTMLElement to insert.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.before = function( fragment ){\n\t\tif( typeof( fragment ) === \"string\" || fragment.nodeType !== undefined ){\n\t\t\tfragment = shoestring( fragment );\n\t\t}\n\n\t\treturn this.each(function( i ){\n\t\t\tfor( var j = 0, jl = fragment.length; j < jl; j++ ){\n\t\t\t\tthis.parentNode.insertBefore( i > 0 ? fragment[ j ].cloneNode( true ) : fragment[ j ], this );\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\t/**\n\t * Get the children of the current collection.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.children = function(){\n\t\t\t\tvar ret = [],\n\t\t\tchilds,\n\t\t\tj;\n\t\tthis.each(function(){\n\t\t\tchilds = this.children;\n\t\t\tj = -1;\n\n\t\t\twhile( j++ < childs.length-1 ){\n\t\t\t\tif( shoestring.inArray(  childs[ j ], ret ) === -1 ){\n\t\t\t\t\tret.push( childs[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn shoestring(ret);\n\t};\n\n\n\n\t/**\n\t * Find an element matching the selector in the set of the current element and its parents.\n\t *\n\t * @param {string} selector The selector used to identify the target element.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.closest = function( selector ){\n\t\tvar ret = [];\n\n\t\tif( !selector ){\n\t\t\treturn shoestring( ret );\n\t\t}\n\n\t\tthis.each(function(){\n\t\t\tvar element, $self = shoestring( element = this );\n\n\t\t\tif( $self.is(selector) ){\n\t\t\t\tret.push( this );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twhile( element.parentElement ) {\n\t\t\t\tif( shoestring(element.parentElement).is(selector) ){\n\t\t\t\t\tret.push( element.parentElement );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t});\n\n\t\treturn shoestring( ret );\n\t};\n\n\n\n  shoestring.cssExceptions = {\n\t\t'float': [ 'cssFloat' ]\n\t};\n\n\n\n\t(function() {\n\t\tvar cssExceptions = shoestring.cssExceptions;\n\n\t\t// IE8 uses marginRight instead of margin-right\n\t\tfunction convertPropertyName( str ) {\n\t\t\treturn str.replace( /\\-([A-Za-z])/g, function ( match, character ) {\n\t\t\t\treturn character.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tfunction _getStyle( element, property ) {\n\t\t\treturn win.getComputedStyle( element, null ).getPropertyValue( property );\n\t\t}\n\n\t\tvar vendorPrefixes = [ '', '-webkit-', '-ms-', '-moz-', '-o-', '-khtml-' ];\n\n\t\t/**\n\t\t * Private function for getting the computed style of an element.\n\t\t *\n\t\t * **NOTE** Please use the [css](../css.js.html) method instead.\n\t\t *\n\t\t * @method _getStyle\n\t\t * @param {HTMLElement} element The element we want the style property for.\n\t\t * @param {string} property The css property we want the style for.\n\t\t */\n\t\tshoestring._getStyle = function( element, property ) {\n\t\t\tvar convert, value, j, k;\n\n\t\t\tif( cssExceptions[ property ] ) {\n\t\t\t\tfor( j = 0, k = cssExceptions[ property ].length; j < k; j++ ) {\n\t\t\t\t\tvalue = _getStyle( element, cssExceptions[ property ][ j ] );\n\n\t\t\t\t\tif( value ) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor( j = 0, k = vendorPrefixes.length; j < k; j++ ) {\n\t\t\t\tconvert = convertPropertyName( vendorPrefixes[ j ] + property );\n\n\t\t\t\t// VendorprefixKeyName || key-name\n\t\t\t\tvalue = _getStyle( element, convert );\n\n\t\t\t\tif( convert !== property ) {\n\t\t\t\t\tvalue = value || _getStyle( element, property );\n\t\t\t\t}\n\n\t\t\t\tif( vendorPrefixes[ j ] ) {\n\t\t\t\t\t// -vendorprefix-key-name\n\t\t\t\t\tvalue = value || _getStyle( element, vendorPrefixes[ j ] + property );\n\t\t\t\t}\n\n\t\t\t\tif( value ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\t})();\n\n\n\n\t(function() {\n\t\tvar cssExceptions = shoestring.cssExceptions;\n\n\t\t// IE8 uses marginRight instead of margin-right\n\t\tfunction convertPropertyName( str ) {\n\t\t\treturn str.replace( /\\-([A-Za-z])/g, function ( match, character ) {\n\t\t\t\treturn character.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Private function for setting the style of an element.\n\t\t *\n\t\t * **NOTE** Please use the [css](../css.js.html) method instead.\n\t\t *\n\t\t * @method _setStyle\n\t\t * @param {HTMLElement} element The element we want to style.\n\t\t * @param {string} property The property being used to style the element.\n\t\t * @param {string} value The css value for the style property.\n\t\t */\n\t\tshoestring._setStyle = function( element, property, value ) {\n\t\t\tvar convertedProperty = convertPropertyName(property);\n\n\t\t\telement.style[ property ] = value;\n\n\t\t\tif( convertedProperty !== property ) {\n\t\t\t\telement.style[ convertedProperty ] = value;\n\t\t\t}\n\n\t\t\tif( cssExceptions[ property ] ) {\n\t\t\t\tfor( var j = 0, k = cssExceptions[ property ].length; j<k; j++ ) {\n\t\t\t\t\telement.style[ cssExceptions[ property ][ j ] ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t})();\n\n\n\n\t/**\n\t * Get the compute style property of the first element or set the value of a style property\n\t * on all elements in the set.\n\t *\n\t * @method _setStyle\n\t * @param {string} property The property being used to style the element.\n\t * @param {string|undefined} value The css value for the style property.\n\t * @return {string|shoestring}\n\t * @this shoestring\n\t */\n\tshoestring.fn.css = function( property, value ){\n\t\tif( !this[0] ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( typeof property === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tfor( var key in property ) {\n\t\t\t\t\tif( property.hasOwnProperty( key ) ) {\n\t\t\t\t\t\tshoestring._setStyle( this, key, property[key] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\telse {\n\t\t\t// assignment else retrieve first\n\t\t\tif( value !== undefined ){\n\t\t\t\treturn this.each(function(){\n\t\t\t\t\tshoestring._setStyle( this, property, value );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn shoestring._getStyle( this[0], property );\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Returns the indexed element wrapped in a new `shoestring` object.\n\t *\n\t * @param {integer} index The index of the element to wrap and return.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.eq = function( index ){\n\t\tif( this[index] ){\n\t\t\treturn shoestring( this[index] );\n\t\t}\n\n\t\treturn shoestring([]);\n\t};\n\n\n\n\t/**\n\t * Filter out the current set if they do *not* match the passed selector or\n\t * the supplied callback returns false\n\t *\n\t * @param {string,function} selector The selector or boolean return value callback used to filter the elements.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.filter = function( selector ){\n\t\tvar ret = [];\n\n\t\tthis.each(function( index ){\n\t\t\tvar wsel;\n\n\t\t\tif( typeof selector === 'function' ) {\n\t\t\t\tif( selector.call( this, index ) !== false ) {\n\t\t\t\t\tret.push( this );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif( !this.parentNode ){\n\t\t\t\t\tvar context = shoestring( doc.createDocumentFragment() );\n\n\t\t\t\t\tcontext[ 0 ].appendChild( this );\n\t\t\t\t\twsel = shoestring( selector, context );\n\t\t\t\t} else {\n\t\t\t\t\twsel = shoestring( selector, this.parentNode );\n\t\t\t\t}\n\n\t\t\t\tif( shoestring.inArray( this, wsel ) > -1 ){\n\t\t\t\t\tret.push( this );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn shoestring( ret );\n\t};\n\n\n\n\t/**\n\t * Find descendant elements of the current collection.\n\t *\n\t * @param {string} selector The selector used to find the children\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.find = function( selector ){\n\t\tvar ret = [],\n\t\t\tfinds;\n\t\tthis.each(function(){\n\t\t\t\tfinds = this.querySelectorAll( selector );\n\n\t\t\tfor( var i = 0, il = finds.length; i < il; i++ ){\n\t\t\t\tret = ret.concat( finds[i] );\n\t\t\t}\n\t\t});\n\t\treturn shoestring( ret );\n\t};\n\n\n\n\t/**\n\t * Returns the first element of the set wrapped in a new `shoestring` object.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.first = function(){\n\t\treturn this.eq( 0 );\n\t};\n\n\n\n\t/**\n\t * Returns the raw DOM node at the passed index.\n\t *\n\t * @param {integer} index The index of the element to wrap and return.\n\t * @return {HTMLElement|undefined|array}\n\t * @this shoestring\n\t */\n\tshoestring.fn.get = function( index ){\n\n\t\t// return an array of elements if index is undefined\n\t\tif( index === undefined ){\n\t\t\tvar elements = [];\n\n\t\t\tfor( var i = 0; i < this.length; i++ ){\n\t\t\t\telements.push( this[ i ] );\n\t\t\t}\n\n\t\t\treturn elements;\n\t\t} else {\n\t\t\treturn this[ index ];\n\t\t}\n\t};\n\n\n\n\tvar set = function( html ){\n\t\tif( typeof html === \"string\" || typeof html === \"number\" ){\n\t\t\treturn this.each(function(){\n\t\t\t\tthis.innerHTML = \"\" + html;\n\t\t\t});\n\t\t} else {\n\t\t\tvar h = \"\";\n\t\t\tif( typeof html.length !== \"undefined\" ){\n\t\t\t\tfor( var i = 0, l = html.length; i < l; i++ ){\n\t\t\t\t\th += html[i].outerHTML;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\th = html.outerHTML;\n\t\t\t}\n\t\t\treturn this.each(function(){\n\t\t\t\tthis.innerHTML = h;\n\t\t\t});\n\t\t}\n\t};\n\t/**\n\t * Gets or sets the `innerHTML` from all the elements in the set.\n\t *\n\t * @param {string|undefined} html The html to assign\n\t * @return {string|shoestring}\n\t * @this shoestring\n\t */\n\tshoestring.fn.html = function( html ){\n\t\t\t\tif( typeof html !== \"undefined\" ){\n\t\t\treturn set.call( this, html );\n\t\t} else { // get\n\t\t\tvar pile = \"\";\n\n\t\t\tthis.each(function(){\n\t\t\t\tpile += this.innerHTML;\n\t\t\t});\n\n\t\t\treturn pile;\n\t\t}\n\t};\n\n\n\n\t(function() {\n\t\tfunction _getIndex( set, test ) {\n\t\t\tvar i, result, element;\n\n\t\t\tfor( i = result = 0; i < set.length; i++ ) {\n\t\t\t\telement = set.item ? set.item(i) : set[i];\n\n\t\t\t\tif( test(element) ){\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// ignore text nodes, etc\n\t\t\t\t// NOTE may need to be more permissive\n\t\t\t\tif( element.nodeType === 1 ){\n\t\t\t\t\tresult++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t * Find the index in the current set for the passed selector.\n\t\t * Without a selector it returns the index of the first node within the array of its siblings.\n\t\t *\n\t\t * @param {string|undefined} selector The selector used to search for the index.\n\t\t * @return {integer}\n\t\t * @this {shoestring}\n\t\t */\n\t\tshoestring.fn.index = function( selector ){\n\t\t\tvar self, children;\n\n\t\t\tself = this;\n\n\t\t\t// no arg? check the children, otherwise check each element that matches\n\t\t\tif( selector === undefined ){\n\t\t\t\tchildren = ( ( this[ 0 ] && this[0].parentNode ) || doc.documentElement).childNodes;\n\n\t\t\t\t// check if the element matches the first of the set\n\t\t\t\treturn _getIndex(children, function( element ) {\n\t\t\t\t\treturn self[0] === element;\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\t// check if the element matches the first selected node from the parent\n\t\t\t\treturn _getIndex(self, function( element ) {\n\t\t\t\t\treturn element === (shoestring( selector, element.parentNode )[ 0 ]);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})();\n\n\n\n\t/**\n\t * Insert the current set before the elements matching the selector.\n\t *\n\t * @param {string} selector The selector before which to insert the current set.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.insertBefore = function( selector ){\n\t\treturn this.each(function(){\n\t\t\tshoestring( selector ).before( this );\n\t\t});\n\t};\n\n\n\n\t/**\n\t * Returns the last element of the set wrapped in a new `shoestring` object.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.last = function(){\n\t\treturn this.eq( this.length - 1 );\n\t};\n\n\n\n\t/**\n\t * Returns a `shoestring` object with the set of siblings of each element in the original set.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.next = function(){\n\t\t\n\t\tvar result = [];\n\n\t\t// TODO need to implement map\n\t\tthis.each(function() {\n\t\t\tvar children, item, found;\n\n\t\t\t// get the child nodes for this member of the set\n\t\t\tchildren = shoestring( this.parentNode )[0].childNodes;\n\n\t\t\tfor( var i = 0; i < children.length; i++ ){\n\t\t\t\titem = children.item( i );\n\n\t\t\t\t// found the item we needed (found) which means current item value is\n\t\t\t\t// the next node in the list, as long as it's viable grab it\n\t\t\t\t// NOTE may need to be more permissive\n\t\t\t\tif( found && item.nodeType === 1 ){\n\t\t\t\t\tresult.push( item );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// find the current item and mark it as found\n\t\t\t\tif( item === this ){\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn shoestring( result );\n\t};\n\n\n\n\t/**\n\t * Removes elements from the current set.\n\t *\n\t * @param {string} selector The selector to use when removing the elements.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.not = function( selector ){\n\t\tvar ret = [];\n\n\t\tthis.each(function(){\n\t\t\tvar found = shoestring( selector, this.parentNode );\n\n\t\t\tif( shoestring.inArray(this, found) === -1 ){\n\t\t\t\tret.push( this );\n\t\t\t}\n\t\t});\n\n\t\treturn shoestring( ret );\n\t};\n\n\n\n\t/**\n\t * Returns the set of first parents for each element in the current set.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.parent = function(){\n\t\tvar ret = [],\n\t\t\tparent;\n\n\t\tthis.each(function(){\n\t\t\t// no parent node, assume top level\n\t\t\t// jQuery parent: return the document object for <html> or the parent node if it exists\n\t\t\tparent = (this === doc.documentElement ? doc : this.parentNode);\n\n\t\t\t// if there is a parent and it's not a document fragment\n\t\t\tif( parent && parent.nodeType !== 11 ){\n\t\t\t\tret.push( parent );\n\t\t\t}\n\t\t});\n\n\t\treturn shoestring(ret);\n\t};\n\n\n\n\t/**\n\t * Add an HTML string or element before the children of each element in the current set.\n\t *\n\t * @param {string|HTMLElement} fragment The HTML string or element to add.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.prepend = function( fragment ){\n\t\tif( typeof( fragment ) === \"string\" || fragment.nodeType !== undefined ){\n\t\t\tfragment = shoestring( fragment );\n\t\t}\n\n\t\treturn this.each(function( i ){\n\n\t\t\tfor( var j = 0, jl = fragment.length; j < jl; j++ ){\n\t\t\t\tvar insertEl = i > 0 ? fragment[ j ].cloneNode( true ) : fragment[ j ];\n\t\t\t\tif ( this.firstChild ){\n\t\t\t\t\tthis.insertBefore( insertEl, this.firstChild );\n\t\t\t\t} else {\n\t\t\t\t\tthis.appendChild( insertEl );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\t/**\n\t * Returns a `shoestring` object with the set of *one* siblingx before each element in the original set.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.prev = function(){\n\t\t\n\t\tvar result = [];\n\n\t\t// TODO need to implement map\n\t\tthis.each(function() {\n\t\t\tvar children, item, found;\n\n\t\t\t// get the child nodes for this member of the set\n\t\t\tchildren = shoestring( this.parentNode )[0].childNodes;\n\n\t\t\tfor( var i = children.length -1; i >= 0; i-- ){\n\t\t\t\titem = children.item( i );\n\n\t\t\t\t// found the item we needed (found) which means current item value is\n\t\t\t\t// the next node in the list, as long as it's viable grab it\n\t\t\t\t// NOTE may need to be more permissive\n\t\t\t\tif( found && item.nodeType === 1 ){\n\t\t\t\t\tresult.push( item );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// find the current item and mark it as found\n\t\t\t\tif( item === this ){\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn shoestring( result );\n\t};\n\n\n\n\t/**\n\t * Returns a `shoestring` object with the set of *all* siblings before each element in the original set.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.prevAll = function(){\n\t\t\n\t\tvar result = [];\n\n\t\tthis.each(function() {\n\t\t\tvar $previous = shoestring( this ).prev();\n\n\t\t\twhile( $previous.length ){\n\t\t\t\tresult.push( $previous[0] );\n\t\t\t\t$previous = $previous.prev();\n\t\t\t}\n\t\t});\n\n\t\treturn shoestring( result );\n\t};\n\n\n\n\t/**\n\t * Remove an attribute from each element in the current set.\n\t *\n\t * @param {string} name The name of the attribute.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.removeAttr = function( name ){\n\t\treturn this.each(function(){\n\t\t\tthis.removeAttribute( name );\n\t\t});\n\t};\n\n\n\n\t/**\n\t * Remove a class from each DOM element in the set of elements.\n\t *\n\t * @param {string} className The name of the class to be removed.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.removeClass = function( cname ){\n\t\tvar classes = cname.replace(/^\\s+|\\s+$/g, '').split( \" \" );\n\n\t\treturn this.each(function(){\n\t\t\tvar newClassName, regex;\n\n\t\t\tfor( var i = 0, il = classes.length; i < il; i++ ){\n\t\t\t\tif( this.className !== undefined ){\n\t\t\t\t\tregex = new RegExp( \"(^|\\\\s)\" + classes[ i ] + \"($|\\\\s)\", \"gmi\" );\n\t\t\t\t\tnewClassName = this.className.replace( regex, \" \" );\n\n\t\t\t\t\tthis.className = newClassName.replace(/^\\s+|\\s+$/g, '');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\t/**\n\t * Remove the current set of elements from the DOM.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.remove = function(){\n\t\treturn this.each(function(){\n\t\t\tif( this.parentNode ) {\n\t\t\t\tthis.parentNode.removeChild( this );\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\t/**\n\t * Replace each element in the current set with that argument HTML string or HTMLElement.\n\t *\n\t * @param {string|HTMLElement} fragment The value to assign.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.replaceWith = function( fragment ){\n\t\tif( typeof( fragment ) === \"string\" ){\n\t\t\tfragment = shoestring( fragment );\n\t\t}\n\n\t\tvar ret = [];\n\n\t\tif( fragment.length > 1 ){\n\t\t\tfragment = fragment.reverse();\n\t\t}\n\t\tthis.each(function( i ){\n\t\t\tvar clone = this.cloneNode( true ),\n\t\t\t\tinsertEl;\n\t\t\tret.push( clone );\n\n\t\t\t// If there is no parentNode, this is pointless, drop it.\n\t\t\tif( !this.parentNode ){ return; }\n\n\t\t\tif( fragment.length === 1 ){\n\t\t\t\tinsertEl = i > 0 ? fragment[ 0 ].cloneNode( true ) : fragment[ 0 ];\n\t\t\t\tthis.parentNode.replaceChild( insertEl, this );\n\t\t\t} else {\n\t\t\t\tfor( var j = 0, jl = fragment.length; j < jl; j++ ){\n\t\t\t\t\tinsertEl = i > 0 ? fragment[ j ].cloneNode( true ) : fragment[ j ];\n\t\t\t\t\tthis.parentNode.insertBefore( insertEl, this.nextSibling );\n\t\t\t\t}\n\t\t\t\tthis.parentNode.removeChild( this );\n\t\t\t}\n\t\t});\n\n\t\treturn shoestring( ret );\n\t};\n\n\n\n  /**\n\t * Get all of the sibling elements for each element in the current set.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.siblings = function(){\n\t\t\n\t\tif( !this.length ) {\n\t\t\treturn shoestring( [] );\n\t\t}\n\n\t\tvar sibs = [], el = this[ 0 ].parentNode.firstChild;\n\n\t\tdo {\n\t\t\tif( el.nodeType === 1 && el !== this[ 0 ] ) {\n\t\t\t\tsibs.push( el );\n\t\t\t}\n\n      el = el.nextSibling;\n\t\t} while( el );\n\n\t\treturn shoestring( sibs );\n\t};\n\n\n\n\tvar getText = function( elem ){\n\t\tvar node,\n\t\t\tret = \"\",\n\t\t\ti = 0,\n\t\t\tnodeType = elem.nodeType;\n\n\t\tif ( !nodeType ) {\n\t\t\t// If no nodeType, this is expected to be an array\n\t\t\twhile ( (node = elem[i++]) ) {\n\t\t\t\t// Do not traverse comment nodes\n\t\t\t\tret += getText( node );\n\t\t\t}\n\t\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t\t// Use textContent for elements\n\t\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\t\treturn elem.textContent;\n\t\t\t} else {\n\t\t\t\t// Traverse its children\n\t\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\t\tret += getText( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\t\treturn elem.nodeValue;\n\t\t}\n\t\t// Do not include comment or processing instruction nodes\n\n\t\treturn ret;\n\t};\n\n  /**\n\t * Recursively retrieve the text content of the each element in the current set.\n\t *\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.text = function() {\n\t\t\n\t\treturn getText( this );\n\t};\n\n\n\n\n\t/**\n\t * Get the value of the first element or set the value of all elements in the current set.\n\t *\n\t * @param {string} value The value to set.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.val = function( value ){\n\t\tvar el;\n\t\tif( value !== undefined ){\n\t\t\treturn this.each(function(){\n\t\t\t\tif( this.tagName === \"SELECT\" ){\n\t\t\t\t\tvar optionSet, option,\n\t\t\t\t\t\toptions = this.options,\n\t\t\t\t\t\tvalues = [],\n\t\t\t\t\t\ti = options.length,\n\t\t\t\t\t\tnewIndex;\n\n\t\t\t\t\tvalues[0] = value;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\toption = options[ i ];\n\t\t\t\t\t\tif ( (option.selected = shoestring.inArray( option.value, values ) >= 0) ) {\n\t\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t\t\tnewIndex = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// force browsers to behave consistently when non-matching value is set\n\t\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\t\tthis.selectedIndex = -1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.selectedIndex = newIndex;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.value = value;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tel = this[0];\n\n\t\t\tif( el.tagName === \"SELECT\" ){\n\t\t\t\tif( el.selectedIndex < 0 ){ return \"\"; }\n\t\t\t\treturn el.options[ el.selectedIndex ].value;\n\t\t\t} else {\n\t\t\t\treturn el.value;\n\t\t\t}\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Private function for setting/getting the offset property for height/width.\n\t *\n\t * **NOTE** Please use the [width](width.js.html) or [height](height.js.html) methods instead.\n\t *\n\t * @param {shoestring} set The set of elements.\n\t * @param {string} name The string \"height\" or \"width\".\n\t * @param {float|undefined} value The value to assign.\n\t * @return shoestring\n\t * @this window\n\t */\n\tshoestring._dimension = function( set, name, value ){\n\t\tvar offsetName;\n\n\t\tif( value === undefined ){\n\t\t\toffsetName = name.replace(/^[a-z]/, function( letter ) {\n\t\t\t\treturn letter.toUpperCase();\n\t\t\t});\n\n\t\t\treturn set[ 0 ][ \"offset\" + offsetName ];\n\t\t} else {\n\t\t\t// support integer values as pixels\n\t\t\tvalue = typeof value === \"string\" ? value : value + \"px\";\n\n\t\t\treturn set.each(function(){\n\t\t\t\tthis.style[ name ] = value;\n\t\t\t});\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Gets the width value of the first element or sets the width for the whole set.\n\t *\n\t * @param {float|undefined} value The value to assign.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.width = function( value ){\n\t\treturn shoestring._dimension( this, \"width\", value );\n\t};\n\n\n\n\t/**\n\t * Wraps the child elements in the provided HTML.\n\t *\n\t * @param {string} html The wrapping HTML.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.wrapInner = function( html ){\n\t\treturn this.each(function(){\n\t\t\tvar inH = this.innerHTML;\n\n\t\t\tthis.innerHTML = \"\";\n\t\t\tshoestring( this ).append( shoestring( html ).html( inH ) );\n\t\t});\n\t};\n\n\n\n\tfunction initEventCache( el, evt ) {\n\t\tif ( !el.shoestringData ) {\n\t\t\tel.shoestringData = {};\n\t\t}\n\t\tif ( !el.shoestringData.events ) {\n\t\t\tel.shoestringData.events = {};\n\t\t}\n\t\tif ( !el.shoestringData.loop ) {\n\t\t\tel.shoestringData.loop = {};\n\t\t}\n\t\tif ( !el.shoestringData.events[ evt ] ) {\n\t\t\tel.shoestringData.events[ evt ] = [];\n\t\t}\n\t}\n\n\tfunction addToEventCache( el, evt, eventInfo ) {\n\t\tvar obj = {};\n\t\tobj.isCustomEvent = eventInfo.isCustomEvent;\n\t\tobj.callback = eventInfo.callfunc;\n\t\tobj.originalCallback = eventInfo.originalCallback;\n\t\tobj.namespace = eventInfo.namespace;\n\n\t\tel.shoestringData.events[ evt ].push( obj );\n\n\t\tif( eventInfo.customEventLoop ) {\n\t\t\tel.shoestringData.loop[ evt ] = eventInfo.customEventLoop;\n\t\t}\n\t}\n\n\t/**\n\t * Bind a callback to an event for the currrent set of elements.\n\t *\n\t * @param {string} evt The event(s) to watch for.\n\t * @param {object,function} data Data to be included with each event or the callback.\n\t * @param {function} originalCallback Callback to be invoked when data is define.d.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.bind = function( evt, data, originalCallback ){\n\n\t\t\t\tif( typeof data === \"function\" ){\n\t\t\toriginalCallback = data;\n\t\t\tdata = null;\n\t\t}\n\n\t\tvar evts = evt.split( \" \" );\n\n\t\t// NOTE the `triggeredElement` is purely for custom events from IE\n\t\tfunction encasedCallback( e, namespace, triggeredElement ){\n\t\t\tvar result;\n\n\t\t\tif( e._namespace && e._namespace !== namespace ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.data = data;\n\t\t\te.namespace = e._namespace;\n\n\t\t\tvar returnTrue = function(){\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\te.isDefaultPrevented = function(){\n\t\t\t\treturn false;\n\t\t\t};\n\n\t\t\tvar originalPreventDefault = e.preventDefault;\n\t\t\tvar preventDefaultConstructor = function(){\n\t\t\t\tif( originalPreventDefault ) {\n\t\t\t\t\treturn function(){\n\t\t\t\t\t\te.isDefaultPrevented = returnTrue;\n\t\t\t\t\t\toriginalPreventDefault.call(e);\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn function(){\n\t\t\t\t\t\te.isDefaultPrevented = returnTrue;\n\t\t\t\t\t\te.returnValue = false;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// thanks https://github.com/jonathantneal/EventListener\n\t\t\te.target = triggeredElement || e.target || e.srcElement;\n\t\t\te.preventDefault = preventDefaultConstructor();\n\t\t\te.stopPropagation = e.stopPropagation || function () {\n\t\t\t\te.cancelBubble = true;\n\t\t\t};\n\n\t\t\tresult = originalCallback.apply(this, [ e ].concat( e._args ) );\n\n\t\t\tif( result === false ){\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this.each(function(){\n\t\t\tvar domEventCallback,\n\t\t\t\tcustomEventCallback,\n\t\t\t\tcustomEventLoop,\n\t\t\t\toEl = this;\n\n\t\t\tfor( var i = 0, il = evts.length; i < il; i++ ){\n\t\t\t\tvar split = evts[ i ].split( \".\" ),\n\t\t\t\t\tevt = split[ 0 ],\n\t\t\t\t\tnamespace = split.length > 0 ? split[ 1 ] : null;\n\n\t\t\t\tdomEventCallback = function( originalEvent ) {\n\t\t\t\t\tif( oEl.ssEventTrigger ) {\n\t\t\t\t\t\toriginalEvent._namespace = oEl.ssEventTrigger._namespace;\n\t\t\t\t\t\toriginalEvent._args = oEl.ssEventTrigger._args;\n\n\t\t\t\t\t\toEl.ssEventTrigger = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn encasedCallback.call( oEl, originalEvent, namespace );\n\t\t\t\t};\n\t\t\t\tcustomEventCallback = null;\n\t\t\t\tcustomEventLoop = null;\n\n\t\t\t\tinitEventCache( this, evt );\n\n\t\t\t\tthis.addEventListener( evt, domEventCallback, false );\n\n\t\t\t\taddToEventCache( this, evt, {\n\t\t\t\t\tcallfunc: customEventCallback || domEventCallback,\n\t\t\t\t\tisCustomEvent: !!customEventCallback,\n\t\t\t\t\tcustomEventLoop: customEventLoop,\n\t\t\t\t\toriginalCallback: originalCallback,\n\t\t\t\t\tnamespace: namespace\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tshoestring.fn.on = shoestring.fn.bind;\n\n\t\n\n\n\t/**\n\t * Unbind a previous bound callback for an event.\n\t *\n\t * @param {string} event The event(s) the callback was bound to..\n\t * @param {function} callback Callback to unbind.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.unbind = function( event, callback ){\n\n\t\t\n\t\tvar evts = event ? event.split( \" \" ) : [];\n\n\t\treturn this.each(function(){\n\t\t\tif( !this.shoestringData || !this.shoestringData.events ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( !evts.length ) {\n\t\t\t\tunbindAll.call( this );\n\t\t\t} else {\n\t\t\t\tvar split, evt, namespace;\n\t\t\t\tfor( var i = 0, il = evts.length; i < il; i++ ){\n\t\t\t\t\tsplit = evts[ i ].split( \".\" ),\n\t\t\t\t\tevt = split[ 0 ],\n\t\t\t\t\tnamespace = split.length > 0 ? split[ 1 ] : null;\n\n\t\t\t\t\tif( evt ) {\n\t\t\t\t\t\tunbind.call( this, evt, namespace, callback );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunbindAll.call( this, namespace, callback );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction unbind( evt, namespace, callback ) {\n\t\tvar bound = this.shoestringData.events[ evt ];\n\t\tif( !(bound && bound.length) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar matched = [], j, jl;\n\t\tfor( j = 0, jl = bound.length; j < jl; j++ ) {\n\t\t\tif( !namespace || namespace === bound[ j ].namespace ) {\n\t\t\t\tif( callback === undefined || callback === bound[ j ].originalCallback ) {\n\t\t\t\t\tthis.removeEventListener( evt, bound[ j ].callback, false );\n\t\t\t\t\tmatched.push( j );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor( j = 0, jl = matched.length; j < jl; j++ ) {\n\t\t\tthis.shoestringData.events[ evt ].splice( j, 1 );\n\t\t}\n\t}\n\n\tfunction unbindAll( namespace, callback ) {\n\t\tfor( var evtKey in this.shoestringData.events ) {\n\t\t\tunbind.call( this, evtKey, namespace, callback );\n\t\t}\n\t}\n\n\tshoestring.fn.off = shoestring.fn.unbind;\n\n\n\t/**\n\t * Bind a callback to an event for the currrent set of elements, unbind after one occurence.\n\t *\n\t * @param {string} event The event(s) to watch for.\n\t * @param {function} callback Callback to invoke on the event.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.one = function( event, callback ){\n\t\tvar evts = event.split( \" \" );\n\n\t\treturn this.each(function(){\n\t\t\tvar thisevt, cbs = {},\t$t = shoestring( this );\n\n\t\t\tfor( var i = 0, il = evts.length; i < il; i++ ){\n\t\t\t\tthisevt = evts[ i ];\n\n\t\t\t\tcbs[ thisevt ] = function( e ){\n\t\t\t\t\tvar $t = shoestring( this );\n\n\t\t\t\t\tfor( var j in cbs ) {\n\t\t\t\t\t\t$t.unbind( j, cbs[ j ] );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn callback.apply( this, [ e ].concat( e._args ) );\n\t\t\t\t};\n\n\t\t\t\t$t.bind( thisevt, cbs[ thisevt ] );\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\t/**\n\t * Trigger an event on the first element in the set, no bubbling, no defaults.\n\t *\n\t * @param {string} event The event(s) to trigger.\n\t * @param {object} args Arguments to append to callback invocations.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.triggerHandler = function( event, args ){\n\t\tvar e = event.split( \" \" )[ 0 ],\n\t\t\tel = this[ 0 ],\n\t\t\tret;\n\n\t\t// See this.fireEvent( 'on' + evts[ i ], document.createEventObject() ); instead of click() etc in trigger.\n\t\tif( doc.createEvent && el.shoestringData && el.shoestringData.events && el.shoestringData.events[ e ] ){\n\t\t\tvar bindings = el.shoestringData.events[ e ];\n\t\t\tfor (var i in bindings ){\n\t\t\t\tif( bindings.hasOwnProperty( i ) ){\n\t\t\t\t\tevent = doc.createEvent( \"Event\" );\n\t\t\t\t\tevent.initEvent( e, true, true );\n\t\t\t\t\tevent._args = args;\n\t\t\t\t\targs.unshift( event );\n\n\t\t\t\t\tret = bindings[ i ].originalCallback.apply( event.target, args );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\n\n\t/**\n\t * Trigger an event on each of the DOM elements in the current set.\n\t *\n\t * @param {string} event The event(s) to trigger.\n\t * @param {object} args Arguments to append to callback invocations.\n\t * @return shoestring\n\t * @this shoestring\n\t */\n\tshoestring.fn.trigger = function( event, args ){\n\t\tvar evts = event.split( \" \" );\n\n\t\treturn this.each(function(){\n\t\t\tvar split, evt, namespace;\n\t\t\tfor( var i = 0, il = evts.length; i < il; i++ ){\n\t\t\t\tsplit = evts[ i ].split( \".\" ),\n\t\t\t\tevt = split[ 0 ],\n\t\t\t\tnamespace = split.length > 0 ? split[ 1 ] : null;\n\n\t\t\t\tif( evt === \"click\" ){\n\t\t\t\t\tif( this.tagName === \"INPUT\" && this.type === \"checkbox\" && this.click ){\n\t\t\t\t\t\tthis.click();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( doc.createEvent ){\n\t\t\t\t\tvar event = doc.createEvent( \"Event\" );\n\t\t\t\t\tevent.initEvent( evt, true, true );\n\t\t\t\t\tevent._args = args;\n\t\t\t\t\tevent._namespace = namespace;\n\n\t\t\t\t\tthis.dispatchEvent( event );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n\n\treturn shoestring;\n}));\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([\"shoestring\"], function (shoestring) {\n      return (root.Tablesaw = factory(shoestring, root));\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('shoestring'), root);\n  } else {\n    root.Tablesaw = factory(shoestring, root);\n  }\n}(typeof window !== \"undefined\" ? window : this, function ($, window) {\n\t\"use strict\";\n\n  var document = window.document;\n// Account for Tablesaw being loaded either before or after the DOMContentLoaded event is fired.\nvar domContentLoadedTriggered = /complete|loaded/.test(document.readyState);\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\tdomContentLoadedTriggered = true;\n});\n\nvar Tablesaw = {\n\ti18n: {\n\t\tmodeStack: \"Stack\",\n\t\tmodeSwipe: \"Swipe\",\n\t\tmodeToggle: \"Toggle\",\n\t\tmodeSwitchColumnsAbbreviated: \"Cols\",\n\t\tmodeSwitchColumns: \"Columns\",\n\t\tcolumnToggleButton: \"Columns\",\n\t\tcolumnToggleError: \"No eligible columns.\",\n\t\tsort: \"Sort\",\n\t\tswipePreviousColumn: \"Previous column\",\n\t\tswipeNextColumn: \"Next column\"\n\t},\n\t// cut the mustard\n\tmustard:\n\t\t\"head\" in document && // IE9+, Firefox 4+, Safari 5.1+, Mobile Safari 4.1+, Opera 11.5+, Android 2.3+\n\t\t(!window.blackberry || window.WebKitPoint) && // only WebKit Blackberry (OS 6+)\n\t\t!window.operamini,\n\t$: $,\n\t_init: function(element) {\n\t\tTablesaw.$(element || document).trigger(\"enhance.tablesaw\");\n\t},\n\tinit: function(element) {\n\t\t// Account for Tablesaw being loaded either before or after the DOMContentLoaded event is fired.\n\t\tdomContentLoadedTriggered =\n\t\t\tdomContentLoadedTriggered || /complete|loaded/.test(document.readyState);\n\t\tif (!domContentLoadedTriggered) {\n\t\t\tif (\"addEventListener\" in document) {\n\t\t\t\t// Use raw DOMContentLoaded instead of shoestring (may have issues in Android 2.3, exhibited by stack table)\n\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", function() {\n\t\t\t\t\tTablesaw._init(element);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tTablesaw._init(element);\n\t\t}\n\t}\n};\n\n$(document).on(\"enhance.tablesaw\", function() {\n\t// Extend i18n config, if one exists.\n\tif (typeof TablesawConfig !== \"undefined\" && TablesawConfig.i18n) {\n\t\tTablesaw.i18n = $.extend(Tablesaw.i18n, TablesawConfig.i18n || {});\n\t}\n\n\tTablesaw.i18n.modes = [\n\t\tTablesaw.i18n.modeStack,\n\t\tTablesaw.i18n.modeSwipe,\n\t\tTablesaw.i18n.modeToggle\n\t];\n});\n\nif (Tablesaw.mustard) {\n\t$(document.documentElement).addClass(\"tablesaw-enhanced\");\n}\n\n(function() {\n\tvar pluginName = \"tablesaw\";\n\tvar classes = {\n\t\ttoolbar: \"tablesaw-bar\"\n\t};\n\tvar events = {\n\t\tcreate: \"tablesawcreate\",\n\t\tdestroy: \"tablesawdestroy\",\n\t\trefresh: \"tablesawrefresh\",\n\t\tresize: \"tablesawresize\"\n\t};\n\tvar defaultMode = \"stack\";\n\tvar initSelector = \"table\";\n\tvar initFilterSelector = \"[data-tablesaw],[data-tablesaw-mode],[data-tablesaw-sortable]\";\n\tvar defaultConfig = {};\n\n\tTablesaw.events = events;\n\n\tvar Table = function(element) {\n\t\tif (!element) {\n\t\t\tthrow new Error(\"Tablesaw requires an element.\");\n\t\t}\n\n\t\tthis.table = element;\n\t\tthis.$table = $(element);\n\n\t\t// only one <thead> and <tfoot> are allowed, per the specification\n\t\tthis.$thead = this.$table\n\t\t\t.children()\n\t\t\t.filter(\"thead\")\n\t\t\t.eq(0);\n\n\t\t// multiple <tbody> are allowed, per the specification\n\t\tthis.$tbody = this.$table.children().filter(\"tbody\");\n\n\t\tthis.mode = this.$table.attr(\"data-tablesaw-mode\") || defaultMode;\n\n\t\tthis.$toolbar = null;\n\n\t\tthis.attributes = {\n\t\t\tsubrow: \"data-tablesaw-subrow\",\n\t\t\tignorerow: \"data-tablesaw-ignorerow\"\n\t\t};\n\n\t\tthis.init();\n\t};\n\n\tTable.prototype.init = function() {\n\t\tif (!this.$thead.length) {\n\t\t\tthrow new Error(\"tablesaw: a <thead> is required, but none was found.\");\n\t\t}\n\n\t\tif (!this.$thead.find(\"th\").length) {\n\t\t\tthrow new Error(\"tablesaw: no header cells found. Are you using <th> inside of <thead>?\");\n\t\t}\n\n\t\t// assign an id if there is none\n\t\tif (!this.$table.attr(\"id\")) {\n\t\t\tthis.$table.attr(\"id\", pluginName + \"-\" + Math.round(Math.random() * 10000));\n\t\t}\n\n\t\tthis.createToolbar();\n\n\t\tthis._initCells();\n\n\t\tthis.$table.data(pluginName, this);\n\n\t\tthis.$table.trigger(events.create, [this]);\n\t};\n\n\tTable.prototype.getConfig = function(pluginSpecificConfig) {\n\t\t// shoestring extend doesn’t support arbitrary args\n\t\tvar configs = $.extend(defaultConfig, pluginSpecificConfig || {});\n\t\treturn $.extend(configs, typeof TablesawConfig !== \"undefined\" ? TablesawConfig : {});\n\t};\n\n\tTable.prototype._getPrimaryHeaderRow = function() {\n\t\treturn this._getHeaderRows().eq(0);\n\t};\n\n\tTable.prototype._getHeaderRows = function() {\n\t\treturn this.$thead\n\t\t\t.children()\n\t\t\t.filter(\"tr\")\n\t\t\t.filter(function() {\n\t\t\t\treturn !$(this).is(\"[data-tablesaw-ignorerow]\");\n\t\t\t});\n\t};\n\n\tTable.prototype._getRowIndex = function($row) {\n\t\treturn $row.prevAll().length;\n\t};\n\n\tTable.prototype._getHeaderRowIndeces = function() {\n\t\tvar self = this;\n\t\tvar indeces = [];\n\t\tthis._getHeaderRows().each(function() {\n\t\t\tindeces.push(self._getRowIndex($(this)));\n\t\t});\n\t\treturn indeces;\n\t};\n\n\tTable.prototype._getPrimaryHeaderCells = function($row) {\n\t\treturn ($row || this._getPrimaryHeaderRow()).find(\"th\");\n\t};\n\n\tTable.prototype._$getCells = function(th) {\n\t\tvar self = this;\n\t\treturn $(th)\n\t\t\t.add(th.cells)\n\t\t\t.filter(function() {\n\t\t\t\tvar $t = $(this);\n\t\t\t\tvar $row = $t.parent();\n\t\t\t\tvar hasColspan = $t.is(\"[colspan]\");\n\t\t\t\t// no subrows or ignored rows (keep cells in ignored rows that do not have a colspan)\n\t\t\t\treturn (\n\t\t\t\t\t!$row.is(\"[\" + self.attributes.subrow + \"]\") &&\n\t\t\t\t\t(!$row.is(\"[\" + self.attributes.ignorerow + \"]\") || !hasColspan)\n\t\t\t\t);\n\t\t\t});\n\t};\n\n\tTable.prototype._getVisibleColspan = function() {\n\t\tvar colspan = 0;\n\t\tthis._getPrimaryHeaderCells().each(function() {\n\t\t\tvar $t = $(this);\n\t\t\tif ($t.css(\"display\") !== \"none\") {\n\t\t\t\tcolspan += parseInt($t.attr(\"colspan\"), 10) || 1;\n\t\t\t}\n\t\t});\n\t\treturn colspan;\n\t};\n\n\tTable.prototype.getColspanForCell = function($cell) {\n\t\tvar visibleColspan = this._getVisibleColspan();\n\t\tvar visibleSiblingColumns = 0;\n\t\tif ($cell.closest(\"tr\").data(\"tablesaw-rowspanned\")) {\n\t\t\tvisibleSiblingColumns++;\n\t\t}\n\n\t\t$cell.siblings().each(function() {\n\t\t\tvar $t = $(this);\n\t\t\tvar colColspan = parseInt($t.attr(\"colspan\"), 10) || 1;\n\n\t\t\tif ($t.css(\"display\") !== \"none\") {\n\t\t\t\tvisibleSiblingColumns += colColspan;\n\t\t\t}\n\t\t});\n\t\t// console.log( $cell[ 0 ], visibleColspan, visibleSiblingColumns );\n\n\t\treturn visibleColspan - visibleSiblingColumns;\n\t};\n\n\tTable.prototype.isCellInColumn = function(header, cell) {\n\t\treturn $(header)\n\t\t\t.add(header.cells)\n\t\t\t.filter(function() {\n\t\t\t\treturn this === cell;\n\t\t\t}).length;\n\t};\n\n\tTable.prototype.updateColspanCells = function(cls, header, userAction) {\n\t\tvar self = this;\n\t\tvar primaryHeaderRow = self._getPrimaryHeaderRow();\n\n\t\t// find persistent column rowspans\n\t\tthis.$table.find(\"[rowspan][data-tablesaw-priority]\").each(function() {\n\t\t\tvar $t = $(this);\n\t\t\tif ($t.attr(\"data-tablesaw-priority\") !== \"persist\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar $row = $t.closest(\"tr\");\n\t\t\tvar rowspan = parseInt($t.attr(\"rowspan\"), 10);\n\t\t\tif (rowspan > 1) {\n\t\t\t\t$row = $row.next();\n\n\t\t\t\t$row.data(\"tablesaw-rowspanned\", true);\n\n\t\t\t\trowspan--;\n\t\t\t}\n\t\t});\n\n\t\tthis.$table\n\t\t\t.find(\"[colspan],[data-tablesaw-maxcolspan]\")\n\t\t\t.filter(function() {\n\t\t\t\t// is not in primary header row\n\t\t\t\treturn $(this).closest(\"tr\")[0] !== primaryHeaderRow[0];\n\t\t\t})\n\t\t\t.each(function() {\n\t\t\t\tvar $cell = $(this);\n\n\t\t\t\tif (userAction === undefined || self.isCellInColumn(header, this)) {\n\t\t\t\t} else {\n\t\t\t\t\t// if is not a user action AND the cell is not in the updating column, kill it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar colspan = self.getColspanForCell($cell);\n\n\t\t\t\tif (cls && userAction !== undefined) {\n\t\t\t\t\t// console.log( colspan === 0 ? \"addClass\" : \"removeClass\", $cell );\n\t\t\t\t\t$cell[colspan === 0 ? \"addClass\" : \"removeClass\"](cls);\n\t\t\t\t}\n\n\t\t\t\t// cache original colspan\n\t\t\t\tvar maxColspan = parseInt($cell.attr(\"data-tablesaw-maxcolspan\"), 10);\n\t\t\t\tif (!maxColspan) {\n\t\t\t\t\t$cell.attr(\"data-tablesaw-maxcolspan\", $cell.attr(\"colspan\"));\n\t\t\t\t} else if (colspan > maxColspan) {\n\t\t\t\t\tcolspan = maxColspan;\n\t\t\t\t}\n\n\t\t\t\t// console.log( this, \"setting colspan to \", colspan );\n\t\t\t\t$cell.attr(\"colspan\", colspan);\n\t\t\t});\n\t};\n\n\tTable.prototype._findPrimaryHeadersForCell = function(cell) {\n\t\tvar $headerRow = this._getPrimaryHeaderRow();\n\t\tvar headerRowIndex = this._getRowIndex($headerRow);\n\t\tvar results = [];\n\n\t\tfor (var rowNumber = 0; rowNumber < this.headerMapping.length; rowNumber++) {\n\t\t\tif (rowNumber === headerRowIndex) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (var colNumber = 0; colNumber < this.headerMapping[rowNumber].length; colNumber++) {\n\t\t\t\tif (this.headerMapping[rowNumber][colNumber] === cell) {\n\t\t\t\t\tresults.push(this.headerMapping[headerRowIndex][colNumber]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t};\n\n\t// used by init cells\n\tTable.prototype.getRows = function() {\n\t\tvar self = this;\n\t\treturn this.$table.find(\"tr\").filter(function() {\n\t\t\treturn $(this)\n\t\t\t\t.closest(\"table\")\n\t\t\t\t.is(self.$table);\n\t\t});\n\t};\n\n\t// used by sortable\n\tTable.prototype.getBodyRows = function(tbody) {\n\t\treturn (tbody ? $(tbody) : this.$tbody).children().filter(\"tr\");\n\t};\n\n\tTable.prototype.getHeaderCellIndex = function(cell) {\n\t\tvar lookup = this.headerMapping[0];\n\t\tfor (var colIndex = 0; colIndex < lookup.length; colIndex++) {\n\t\t\tif (lookup[colIndex] === cell) {\n\t\t\t\treturn colIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n\n\tTable.prototype._initCells = function() {\n\t\t// re-establish original colspans\n\t\tthis.$table.find(\"[data-tablesaw-maxcolspan]\").each(function() {\n\t\t\tvar $t = $(this);\n\t\t\t$t.attr(\"colspan\", $t.attr(\"data-tablesaw-maxcolspan\"));\n\t\t});\n\n\t\tvar $rows = this.getRows();\n\t\tvar columnLookup = [];\n\n\t\t$rows.each(function(rowNumber) {\n\t\t\tcolumnLookup[rowNumber] = [];\n\t\t});\n\n\t\t$rows.each(function(rowNumber) {\n\t\t\tvar coltally = 0;\n\t\t\tvar $t = $(this);\n\t\t\tvar children = $t.children();\n\n\t\t\tchildren.each(function() {\n\t\t\t\tvar colspan = parseInt(\n\t\t\t\t\tthis.getAttribute(\"data-tablesaw-maxcolspan\") || this.getAttribute(\"colspan\"),\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t\tvar rowspan = parseInt(this.getAttribute(\"rowspan\"), 10);\n\n\t\t\t\t// set in a previous rowspan\n\t\t\t\twhile (columnLookup[rowNumber][coltally]) {\n\t\t\t\t\tcoltally++;\n\t\t\t\t}\n\n\t\t\t\tcolumnLookup[rowNumber][coltally] = this;\n\n\t\t\t\t// TODO? both colspan and rowspan\n\t\t\t\tif (colspan) {\n\t\t\t\t\tfor (var k = 0; k < colspan - 1; k++) {\n\t\t\t\t\t\tcoltally++;\n\t\t\t\t\t\tcolumnLookup[rowNumber][coltally] = this;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (rowspan) {\n\t\t\t\t\tfor (var j = 1; j < rowspan; j++) {\n\t\t\t\t\t\tcolumnLookup[rowNumber + j][coltally] = this;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcoltally++;\n\t\t\t});\n\t\t});\n\n\t\tvar headerRowIndeces = this._getHeaderRowIndeces();\n\t\tfor (var colNumber = 0; colNumber < columnLookup[0].length; colNumber++) {\n\t\t\tfor (var headerIndex = 0, k = headerRowIndeces.length; headerIndex < k; headerIndex++) {\n\t\t\t\tvar headerCol = columnLookup[headerRowIndeces[headerIndex]][colNumber];\n\n\t\t\t\tvar rowNumber = headerRowIndeces[headerIndex];\n\t\t\t\tvar rowCell;\n\n\t\t\t\tif (!headerCol.cells) {\n\t\t\t\t\theaderCol.cells = [];\n\t\t\t\t}\n\n\t\t\t\twhile (rowNumber < columnLookup.length) {\n\t\t\t\t\trowCell = columnLookup[rowNumber][colNumber];\n\n\t\t\t\t\tif (headerCol !== rowCell) {\n\t\t\t\t\t\theaderCol.cells.push(rowCell);\n\t\t\t\t\t}\n\n\t\t\t\t\trowNumber++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.headerMapping = columnLookup;\n\t};\n\n\tTable.prototype.refresh = function() {\n\t\tthis._initCells();\n\n\t\tthis.$table.trigger(events.refresh, [this]);\n\t};\n\n\tTable.prototype._getToolbarAnchor = function() {\n\t\tvar $parent = this.$table.parent();\n\t\tif ($parent.is(\".tablesaw-overflow\")) {\n\t\t\treturn $parent;\n\t\t}\n\t\treturn this.$table;\n\t};\n\n\tTable.prototype._getToolbar = function($anchor) {\n\t\tif (!$anchor) {\n\t\t\t$anchor = this._getToolbarAnchor();\n\t\t}\n\t\treturn $anchor.prev().filter(\".\" + classes.toolbar);\n\t};\n\n\tTable.prototype.createToolbar = function() {\n\t\t// Insert the toolbar\n\t\t// TODO move this into a separate component\n\t\tvar $anchor = this._getToolbarAnchor();\n\t\tvar $toolbar = this._getToolbar($anchor);\n\t\tif (!$toolbar.length) {\n\t\t\t$toolbar = $(\"<div>\")\n\t\t\t\t.addClass(classes.toolbar)\n\t\t\t\t.insertBefore($anchor);\n\t\t}\n\t\tthis.$toolbar = $toolbar;\n\n\t\tif (this.mode) {\n\t\t\tthis.$toolbar.addClass(\"tablesaw-mode-\" + this.mode);\n\t\t}\n\t};\n\n\tTable.prototype.destroy = function() {\n\t\t// Don’t remove the toolbar, just erase the classes on it.\n\t\t// Some of the table features are not yet destroy-friendly.\n\t\tthis._getToolbar().each(function() {\n\t\t\tthis.className = this.className.replace(/\\btablesaw-mode\\-\\w*\\b/gi, \"\");\n\t\t});\n\n\t\tvar tableId = this.$table.attr(\"id\");\n\t\t$(document).off(\".\" + tableId);\n\t\t$(window).off(\".\" + tableId);\n\n\t\t// other plugins\n\t\tthis.$table.trigger(events.destroy, [this]);\n\n\t\tthis.$table.removeData(pluginName);\n\t};\n\n\t// Collection method.\n\t$.fn[pluginName] = function() {\n\t\treturn this.each(function() {\n\t\t\tvar $t = $(this);\n\n\t\t\tif ($t.data(pluginName)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnew Table(this);\n\t\t});\n\t};\n\n\tvar $doc = $(document);\n\t$doc.on(\"enhance.tablesaw\", function(e) {\n\t\t// Cut the mustard\n\t\tif (Tablesaw.mustard) {\n\t\t\tvar $target = $(e.target);\n\t\t\tif ($target.parent().length) {\n\t\t\t\t$target = $target.parent();\n\t\t\t}\n\n\t\t\t$target\n\t\t\t\t.find(initSelector)\n\t\t\t\t.filter(initFilterSelector)\n\t\t\t\t[pluginName]();\n\t\t}\n\t});\n\n\t// Avoid a resize during scroll:\n\t// Some Mobile devices trigger a resize during scroll (sometimes when\n\t// doing elastic stretch at the end of the document or from the\n\t// location bar hide)\n\tvar isScrolling = false;\n\tvar scrollTimeout;\n\t$doc.on(\"scroll.tablesaw\", function() {\n\t\tisScrolling = true;\n\n\t\twindow.clearTimeout(scrollTimeout);\n\t\tscrollTimeout = window.setTimeout(function() {\n\t\t\tisScrolling = false;\n\t\t}, 300); // must be greater than the resize timeout below\n\t});\n\n\tvar resizeTimeout;\n\t$(window).on(\"resize\", function() {\n\t\tif (!isScrolling) {\n\t\t\twindow.clearTimeout(resizeTimeout);\n\t\t\tresizeTimeout = window.setTimeout(function() {\n\t\t\t\t$doc.trigger(events.resize);\n\t\t\t}, 150); // must be less than the scrolling timeout above.\n\t\t}\n\t});\n\n\tTablesaw.Table = Table;\n})();\n\n(function() {\n\tvar classes = {\n\t\tstackTable: \"tablesaw-stack\",\n\t\tcellLabels: \"tablesaw-cell-label\",\n\t\tcellContentLabels: \"tablesaw-cell-content\"\n\t};\n\n\tvar data = {\n\t\tkey: \"tablesaw-stack\"\n\t};\n\n\tvar attrs = {\n\t\tlabelless: \"data-tablesaw-no-labels\",\n\t\thideempty: \"data-tablesaw-hide-empty\"\n\t};\n\n\tvar Stack = function(element, tablesaw) {\n\t\tthis.tablesaw = tablesaw;\n\t\tthis.$table = $(element);\n\n\t\tthis.labelless = this.$table.is(\"[\" + attrs.labelless + \"]\");\n\t\tthis.hideempty = this.$table.is(\"[\" + attrs.hideempty + \"]\");\n\n\t\tthis.$table.data(data.key, this);\n\t};\n\n\tStack.prototype.init = function() {\n\t\tthis.$table.addClass(classes.stackTable);\n\n\t\tif (this.labelless) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar self = this;\n\n\t\tthis.$table\n\t\t\t.find(\"th, td\")\n\t\t\t.filter(function() {\n\t\t\t\treturn !$(this).closest(\"thead\").length;\n\t\t\t})\n\t\t\t.filter(function() {\n\t\t\t\treturn (\n\t\t\t\t\t!$(this).is(\"[\" + attrs.labelless + \"]\") &&\n\t\t\t\t\t!$(this)\n\t\t\t\t\t\t.closest(\"tr\")\n\t\t\t\t\t\t.is(\"[\" + attrs.labelless + \"]\") &&\n\t\t\t\t\t(!self.hideempty || !!$(this).html())\n\t\t\t\t);\n\t\t\t})\n\t\t\t.each(function() {\n\t\t\t\tvar $newHeader = $(document.createElement(\"b\")).addClass(classes.cellLabels);\n\t\t\t\tvar $cell = $(this);\n\n\t\t\t\t$(self.tablesaw._findPrimaryHeadersForCell(this)).each(function(index) {\n\t\t\t\t\tvar $header = $(this.cloneNode(true));\n\t\t\t\t\t// TODO decouple from sortable better\n\t\t\t\t\t// Changed from .text() in https://github.com/filamentgroup/tablesaw/commit/b9c12a8f893ec192830ec3ba2d75f062642f935b\n\t\t\t\t\t// to preserve structural html in headers, like <a>\n\t\t\t\t\tvar $sortableButton = $header.find(\".tablesaw-sortable-btn\");\n\t\t\t\t\t$header.find(\".tablesaw-sortable-arrow\").remove();\n\n\t\t\t\t\t// TODO decouple from checkall better\n\t\t\t\t\tvar $checkall = $header.find(\"[data-tablesaw-checkall]\");\n\t\t\t\t\t$checkall.closest(\"label\").remove();\n\t\t\t\t\tif ($checkall.length) {\n\t\t\t\t\t\t$newHeader = $([]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t$newHeader.append(document.createTextNode(\", \"));\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentNode = $sortableButton.length ? $sortableButton[0] : $header[0];\n\t\t\t\t\tvar el;\n\t\t\t\t\twhile ((el = parentNode.firstChild)) {\n\t\t\t\t\t\t$newHeader[0].appendChild(el);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif ($newHeader.length && !$cell.find(\".\" + classes.cellContentLabels).length) {\n\t\t\t\t\t$cell.wrapInner(\"<span class='\" + classes.cellContentLabels + \"'></span>\");\n\t\t\t\t}\n\n\t\t\t\t// Update if already exists.\n\t\t\t\tvar $label = $cell.find(\".\" + classes.cellLabels);\n\t\t\t\tif (!$label.length) {\n\t\t\t\t\t$cell.prepend(document.createTextNode(\" \"));\n\t\t\t\t\t$cell.prepend($newHeader);\n\t\t\t\t} else {\n\t\t\t\t\t// only if changed\n\t\t\t\t\t$label.replaceWith($newHeader);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tStack.prototype.destroy = function() {\n\t\tthis.$table.removeClass(classes.stackTable);\n\t\tthis.$table.find(\".\" + classes.cellLabels).remove();\n\t\tthis.$table.find(\".\" + classes.cellContentLabels).each(function() {\n\t\t\t$(this).replaceWith($(this.childNodes));\n\t\t});\n\t};\n\n\t// on tablecreate, init\n\t$(document)\n\t\t.on(Tablesaw.events.create, function(e, tablesaw) {\n\t\t\tif (tablesaw.mode === \"stack\") {\n\t\t\t\tvar table = new Stack(tablesaw.table, tablesaw);\n\t\t\t\ttable.init();\n\t\t\t}\n\t\t})\n\t\t.on(Tablesaw.events.refresh, function(e, tablesaw) {\n\t\t\tif (tablesaw.mode === \"stack\") {\n\t\t\t\t$(tablesaw.table)\n\t\t\t\t\t.data(data.key)\n\t\t\t\t\t.init();\n\t\t\t}\n\t\t})\n\t\t.on(Tablesaw.events.destroy, function(e, tablesaw) {\n\t\t\tif (tablesaw.mode === \"stack\") {\n\t\t\t\t$(tablesaw.table)\n\t\t\t\t\t.data(data.key)\n\t\t\t\t\t.destroy();\n\t\t\t}\n\t\t});\n\n\tTablesaw.Stack = Stack;\n})();\n\n(function() {\n\tvar pluginName = \"tablesawbtn\",\n\t\tmethods = {\n\t\t\t_create: function() {\n\t\t\t\treturn $(this).each(function() {\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.trigger(\"beforecreate.\" + pluginName)\n\t\t\t\t\t\t[pluginName](\"_init\")\n\t\t\t\t\t\t.trigger(\"create.\" + pluginName);\n\t\t\t\t});\n\t\t\t},\n\t\t\t_init: function() {\n\t\t\t\tvar oEl = $(this),\n\t\t\t\t\tsel = this.getElementsByTagName(\"select\")[0];\n\n\t\t\t\tif (sel) {\n\t\t\t\t\t// TODO next major version: remove .btn-select\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.addClass(\"btn-select tablesaw-btn-select\")\n\t\t\t\t\t\t[pluginName](\"_select\", sel);\n\t\t\t\t}\n\t\t\t\treturn oEl;\n\t\t\t},\n\t\t\t_select: function(sel) {\n\t\t\t\tvar update = function(oEl, sel) {\n\t\t\t\t\tvar opts = $(sel).find(\"option\");\n\t\t\t\t\tvar label = document.createElement(\"span\");\n\t\t\t\t\tvar el;\n\t\t\t\t\tvar children;\n\t\t\t\t\tvar found = false;\n\n\t\t\t\t\tlabel.setAttribute(\"aria-hidden\", \"true\");\n\t\t\t\t\tlabel.innerHTML = \"&#160;\";\n\n\t\t\t\t\topts.each(function() {\n\t\t\t\t\t\tvar opt = this;\n\t\t\t\t\t\tif (opt.selected) {\n\t\t\t\t\t\t\tlabel.innerHTML = opt.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tchildren = oEl.childNodes;\n\t\t\t\t\tif (opts.length > 0) {\n\t\t\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\t\t\tel = children[i];\n\n\t\t\t\t\t\t\tif (el && el.nodeName.toUpperCase() === \"SPAN\") {\n\t\t\t\t\t\t\t\toEl.replaceChild(label, el);\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!found) {\n\t\t\t\t\t\t\toEl.insertBefore(label, oEl.firstChild);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tupdate(this, sel);\n\t\t\t\t// todo should this be tablesawrefresh?\n\t\t\t\t$(this).on(\"change refresh\", function() {\n\t\t\t\t\tupdate(this, sel);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t// Collection method.\n\t$.fn[pluginName] = function(arrg, a, b, c) {\n\t\treturn this.each(function() {\n\t\t\t// if it's a method\n\t\t\tif (arrg && typeof arrg === \"string\") {\n\t\t\t\treturn $.fn[pluginName].prototype[arrg].call(this, a, b, c);\n\t\t\t}\n\n\t\t\t// don't re-init\n\t\t\tif ($(this).data(pluginName + \"active\")) {\n\t\t\t\treturn $(this);\n\t\t\t}\n\n\t\t\t$(this).data(pluginName + \"active\", true);\n\n\t\t\t$.fn[pluginName].prototype._create.call(this);\n\t\t});\n\t};\n\n\t// add methods\n\t$.extend($.fn[pluginName].prototype, methods);\n\n\t// TODO OOP this and add to Tablesaw object\n})();\n\n(function() {\n\tvar data = {\n\t\tkey: \"tablesaw-coltoggle\"\n\t};\n\n\tvar ColumnToggle = function(element) {\n\t\tthis.$table = $(element);\n\n\t\tif (!this.$table.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tablesaw = this.$table.data(\"tablesaw\");\n\n\t\tthis.attributes = {\n\t\t\tbtnTarget: \"data-tablesaw-columntoggle-btn-target\",\n\t\t\tset: \"data-tablesaw-columntoggle-set\"\n\t\t};\n\n\t\tthis.classes = {\n\t\t\tcolumnToggleTable: \"tablesaw-columntoggle\",\n\t\t\tcolumnBtnContain: \"tablesaw-columntoggle-btnwrap tablesaw-advance\",\n\t\t\tcolumnBtn: \"tablesaw-columntoggle-btn tablesaw-nav-btn down\",\n\t\t\tpopup: \"tablesaw-columntoggle-popup\",\n\t\t\tpriorityPrefix: \"tablesaw-priority-\"\n\t\t};\n\n\t\tthis.set = [];\n\t\tthis.$headers = this.tablesaw._getPrimaryHeaderCells();\n\n\t\tthis.$table.data(data.key, this);\n\t};\n\n\t// Column Toggle Sets (one column chooser can control multiple tables)\n\tColumnToggle.prototype.initSet = function() {\n\t\tvar set = this.$table.attr(this.attributes.set);\n\t\tif (set) {\n\t\t\t// Should not include the current table\n\t\t\tvar table = this.$table[0];\n\t\t\tthis.set = $(\"table[\" + this.attributes.set + \"='\" + set + \"']\")\n\t\t\t\t.filter(function() {\n\t\t\t\t\treturn this !== table;\n\t\t\t\t})\n\t\t\t\t.get();\n\t\t}\n\t};\n\n\tColumnToggle.prototype.init = function() {\n\t\tif (!this.$table.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tableId,\n\t\t\tid,\n\t\t\t$menuButton,\n\t\t\t$popup,\n\t\t\t$menu,\n\t\t\t$btnContain,\n\t\t\tself = this;\n\n\t\tvar cfg = this.tablesaw.getConfig({\n\t\t\tgetColumnToggleLabelTemplate: function(text) {\n\t\t\t\treturn \"<label><input type='checkbox' checked>\" + text + \"</label>\";\n\t\t\t}\n\t\t});\n\n\t\tthis.$table.addClass(this.classes.columnToggleTable);\n\n\t\ttableId = this.$table.attr(\"id\");\n\t\tid = tableId + \"-popup\";\n\t\t$btnContain = $(\"<div class='\" + this.classes.columnBtnContain + \"'></div>\");\n\t\t// TODO next major version: remove .btn\n\t\t$menuButton = $(\n\t\t\t\"<a href='#\" +\n\t\t\t\tid +\n\t\t\t\t\"' class='btn tablesaw-btn btn-micro \" +\n\t\t\t\tthis.classes.columnBtn +\n\t\t\t\t\"' data-popup-link>\" +\n\t\t\t\t\"<span>\" +\n\t\t\t\tTablesaw.i18n.columnToggleButton +\n\t\t\t\t\"</span></a>\"\n\t\t);\n\t\t$popup = $(\"<div class='\" + this.classes.popup + \"' id='\" + id + \"'></div>\");\n\t\t$menu = $(\"<div class='tablesaw-btn-group'></div>\");\n\n\t\tthis.$popup = $popup;\n\n\t\tvar hasNonPersistentHeaders = false;\n\t\tthis.$headers.each(function() {\n\t\t\tvar $this = $(this),\n\t\t\t\tpriority = $this.attr(\"data-tablesaw-priority\"),\n\t\t\t\t$cells = self.tablesaw._$getCells(this);\n\n\t\t\tif (priority && priority !== \"persist\") {\n\t\t\t\t$cells.addClass(self.classes.priorityPrefix + priority);\n\n\t\t\t\t$(cfg.getColumnToggleLabelTemplate($this.text()))\n\t\t\t\t\t.appendTo($menu)\n\t\t\t\t\t.find('input[type=\"checkbox\"]')\n\t\t\t\t\t.data(\"tablesaw-header\", this);\n\n\t\t\t\thasNonPersistentHeaders = true;\n\t\t\t}\n\t\t});\n\n\t\tif (!hasNonPersistentHeaders) {\n\t\t\t$menu.append(\"<label>\" + Tablesaw.i18n.columnToggleError + \"</label>\");\n\t\t}\n\n\t\t$menu.appendTo($popup);\n\n\t\tfunction onToggleCheckboxChange(checkbox) {\n\t\t\tvar checked = checkbox.checked;\n\n\t\t\tvar header = self.getHeaderFromCheckbox(checkbox);\n\t\t\tvar $cells = self.tablesaw._$getCells(header);\n\n\t\t\t$cells[!checked ? \"addClass\" : \"removeClass\"](\"tablesaw-toggle-cellhidden\");\n\t\t\t$cells[checked ? \"addClass\" : \"removeClass\"](\"tablesaw-toggle-cellvisible\");\n\n\t\t\tself.updateColspanCells(header, checked);\n\n\t\t\tself.$table.trigger(\"tablesawcolumns\");\n\t\t}\n\n\t\t// bind change event listeners to inputs - TODO: move to a private method?\n\t\t$menu.find('input[type=\"checkbox\"]').on(\"change\", function(e) {\n\t\t\tonToggleCheckboxChange(e.target);\n\n\t\t\tif (self.set.length) {\n\t\t\t\tvar index;\n\t\t\t\t$(self.$popup)\n\t\t\t\t\t.find(\"input[type='checkbox']\")\n\t\t\t\t\t.each(function(j) {\n\t\t\t\t\t\tif (this === e.target) {\n\t\t\t\t\t\t\tindex = j;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t$(self.set).each(function() {\n\t\t\t\t\tvar checkbox = $(this)\n\t\t\t\t\t\t.data(data.key)\n\t\t\t\t\t\t.$popup.find(\"input[type='checkbox']\")\n\t\t\t\t\t\t.get(index);\n\t\t\t\t\tif (checkbox) {\n\t\t\t\t\t\tcheckbox.checked = e.target.checked;\n\t\t\t\t\t\tonToggleCheckboxChange(checkbox);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$menuButton.appendTo($btnContain);\n\n\t\t// Use a different target than the toolbar\n\t\tvar $btnTarget = $(this.$table.attr(this.attributes.btnTarget));\n\t\t$btnContain.appendTo($btnTarget.length ? $btnTarget : this.tablesaw.$toolbar);\n\n\t\tfunction closePopup(event) {\n\t\t\t// Click came from inside the popup, ignore.\n\t\t\tif (event && $(event.target).closest(\".\" + self.classes.popup).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$(document).off(\"click.\" + tableId);\n\t\t\t$menuButton.removeClass(\"up\").addClass(\"down\");\n\t\t\t$btnContain.removeClass(\"visible\");\n\t\t}\n\n\t\tvar closeTimeout;\n\t\tfunction openPopup() {\n\t\t\t$btnContain.addClass(\"visible\");\n\t\t\t$menuButton.removeClass(\"down\").addClass(\"up\");\n\n\t\t\t$(document).off(\"click.\" + tableId, closePopup);\n\n\t\t\twindow.clearTimeout(closeTimeout);\n\t\t\tcloseTimeout = window.setTimeout(function() {\n\t\t\t\t$(document).on(\"click.\" + tableId, closePopup);\n\t\t\t}, 15);\n\t\t}\n\n\t\t$menuButton.on(\"click.tablesaw\", function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tif (!$btnContain.is(\".visible\")) {\n\t\t\t\topenPopup();\n\t\t\t} else {\n\t\t\t\tclosePopup();\n\t\t\t}\n\t\t});\n\n\t\t$popup.appendTo($btnContain);\n\n\t\tthis.$menu = $menu;\n\n\t\t// Fix for iOS not rendering shadows correctly when using `-webkit-overflow-scrolling`\n\t\tvar $overflow = this.$table.closest(\".tablesaw-overflow\");\n\t\tif ($overflow.css(\"-webkit-overflow-scrolling\")) {\n\t\t\tvar timeout;\n\t\t\t$overflow.on(\"scroll\", function() {\n\t\t\t\tvar $div = $(this);\n\t\t\t\twindow.clearTimeout(timeout);\n\t\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\t\t$div.css(\"-webkit-overflow-scrolling\", \"auto\");\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\t$div.css(\"-webkit-overflow-scrolling\", \"touch\");\n\t\t\t\t\t}, 0);\n\t\t\t\t}, 100);\n\t\t\t});\n\t\t}\n\n\t\t$(window).on(Tablesaw.events.resize + \".\" + tableId, function() {\n\t\t\tself.refreshToggle();\n\t\t});\n\n\t\tthis.initSet();\n\t\tthis.refreshToggle();\n\t};\n\n\tColumnToggle.prototype.getHeaderFromCheckbox = function(checkbox) {\n\t\treturn $(checkbox).data(\"tablesaw-header\");\n\t};\n\n\tColumnToggle.prototype.refreshToggle = function() {\n\t\tvar self = this;\n\t\tvar invisibleColumns = 0;\n\t\tthis.$menu.find(\"input\").each(function() {\n\t\t\tvar header = self.getHeaderFromCheckbox(this);\n\t\t\tthis.checked =\n\t\t\t\tself.tablesaw\n\t\t\t\t\t._$getCells(header)\n\t\t\t\t\t.eq(0)\n\t\t\t\t\t.css(\"display\") === \"table-cell\";\n\t\t});\n\n\t\tthis.updateColspanCells();\n\t};\n\n\tColumnToggle.prototype.updateColspanCells = function(header, userAction) {\n\t\tthis.tablesaw.updateColspanCells(\"tablesaw-toggle-cellhidden\", header, userAction);\n\t};\n\n\tColumnToggle.prototype.destroy = function() {\n\t\tthis.$table.removeClass(this.classes.columnToggleTable);\n\t\tthis.$table.find(\"th, td\").each(function() {\n\t\t\tvar $cell = $(this);\n\t\t\t$cell.removeClass(\"tablesaw-toggle-cellhidden\").removeClass(\"tablesaw-toggle-cellvisible\");\n\n\t\t\tthis.className = this.className.replace(/\\bui\\-table\\-priority\\-\\d\\b/g, \"\");\n\t\t});\n\t};\n\n\t// on tablecreate, init\n\t$(document).on(Tablesaw.events.create, function(e, tablesaw) {\n\t\tif (tablesaw.mode === \"columntoggle\") {\n\t\t\tvar table = new ColumnToggle(tablesaw.table);\n\t\t\ttable.init();\n\t\t}\n\t});\n\n\t$(document).on(Tablesaw.events.destroy, function(e, tablesaw) {\n\t\tif (tablesaw.mode === \"columntoggle\") {\n\t\t\t$(tablesaw.table)\n\t\t\t\t.data(data.key)\n\t\t\t\t.destroy();\n\t\t}\n\t});\n\n\t$(document).on(Tablesaw.events.refresh, function(e, tablesaw) {\n\t\tif (tablesaw.mode === \"columntoggle\") {\n\t\t\t$(tablesaw.table)\n\t\t\t\t.data(data.key)\n\t\t\t\t.refreshToggle();\n\t\t}\n\t});\n\n\tTablesaw.ColumnToggle = ColumnToggle;\n})();\n\n(function() {\n\tfunction getSortValue(cell) {\n\t\tvar text = [];\n\t\t$(cell.childNodes).each(function() {\n\t\t\tvar $el = $(this);\n\t\t\tif ($el.is(\"input, select\")) {\n\t\t\t\ttext.push($el.val());\n\t\t\t} else if ($el.is(\".tablesaw-cell-label\")) {\n\t\t\t} else {\n\t\t\t\ttext.push(($el.text() || \"\").replace(/^\\s+|\\s+$/g, \"\"));\n\t\t\t}\n\t\t});\n\n\t\treturn text.join(\"\");\n\t}\n\n\tvar pluginName = \"tablesaw-sortable\",\n\t\tinitSelector = \"table[data-\" + pluginName + \"]\",\n\t\tsortableSwitchSelector = \"[data-\" + pluginName + \"-switch]\",\n\t\tattrs = {\n\t\t\tsortCol: \"data-tablesaw-sortable-col\",\n\t\t\tdefaultCol: \"data-tablesaw-sortable-default-col\",\n\t\t\tnumericCol: \"data-tablesaw-sortable-numeric\",\n\t\t\tsubRow: \"data-tablesaw-subrow\",\n\t\t\tignoreRow: \"data-tablesaw-ignorerow\"\n\t\t},\n\t\tclasses = {\n\t\t\thead: pluginName + \"-head\",\n\t\t\tascend: pluginName + \"-ascending\",\n\t\t\tdescend: pluginName + \"-descending\",\n\t\t\tswitcher: pluginName + \"-switch\",\n\t\t\ttableToolbar: \"tablesaw-bar-section\",\n\t\t\tsortButton: pluginName + \"-btn\"\n\t\t},\n\t\tmethods = {\n\t\t\t_create: function(o) {\n\t\t\t\treturn $(this).each(function() {\n\t\t\t\t\tvar init = $(this).data(pluginName + \"-init\");\n\t\t\t\t\tif (init) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.data(pluginName + \"-init\", true)\n\t\t\t\t\t\t.trigger(\"beforecreate.\" + pluginName)\n\t\t\t\t\t\t[pluginName](\"_init\", o)\n\t\t\t\t\t\t.trigger(\"create.\" + pluginName);\n\t\t\t\t});\n\t\t\t},\n\t\t\t_init: function() {\n\t\t\t\tvar el = $(this);\n\t\t\t\tvar tblsaw = el.data(\"tablesaw\");\n\t\t\t\tvar heads;\n\t\t\t\tvar $switcher;\n\n\t\t\t\tfunction addClassToHeads(h) {\n\t\t\t\t\t$.each(h, function(i, v) {\n\t\t\t\t\t\t$(v).addClass(classes.head);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction makeHeadsActionable(h, fn) {\n\t\t\t\t\t$.each(h, function(i, col) {\n\t\t\t\t\t\tvar b = $(\"<button class='\" + classes.sortButton + \"'/>\");\n\t\t\t\t\t\tb.on(\"click\", { col: col }, fn);\n\t\t\t\t\t\t$(col)\n\t\t\t\t\t\t\t.wrapInner(b)\n\t\t\t\t\t\t\t.find(\"button\")\n\t\t\t\t\t\t\t.append(\"<span class='tablesaw-sortable-arrow'>\");\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction clearOthers(headcells) {\n\t\t\t\t\t$.each(headcells, function(i, v) {\n\t\t\t\t\t\tvar col = $(v);\n\t\t\t\t\t\tcol.removeAttr(attrs.defaultCol);\n\t\t\t\t\t\tcol.removeClass(classes.ascend);\n\t\t\t\t\t\tcol.removeClass(classes.descend);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction headsOnAction(e) {\n\t\t\t\t\tif ($(e.target).is(\"a[href]\")) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tvar headCell = $(e.target).closest(\"[\" + attrs.sortCol + \"]\"),\n\t\t\t\t\t\tv = e.data.col,\n\t\t\t\t\t\tnewSortValue = heads.index(headCell[0]);\n\n\t\t\t\t\tclearOthers(\n\t\t\t\t\t\theadCell\n\t\t\t\t\t\t\t.closest(\"thead\")\n\t\t\t\t\t\t\t.find(\"th\")\n\t\t\t\t\t\t\t.filter(function() {\n\t\t\t\t\t\t\t\treturn this !== headCell[0];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tif (headCell.is(\".\" + classes.descend) || !headCell.is(\".\" + classes.ascend)) {\n\t\t\t\t\t\tel[pluginName](\"sortBy\", v, true);\n\t\t\t\t\t\tnewSortValue += \"_asc\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel[pluginName](\"sortBy\", v);\n\t\t\t\t\t\tnewSortValue += \"_desc\";\n\t\t\t\t\t}\n\t\t\t\t\tif ($switcher) {\n\t\t\t\t\t\t$switcher\n\t\t\t\t\t\t\t.find(\"select\")\n\t\t\t\t\t\t\t.val(newSortValue)\n\t\t\t\t\t\t\t.trigger(\"refresh\");\n\t\t\t\t\t}\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\n\t\t\t\tfunction handleDefault(heads) {\n\t\t\t\t\t$.each(heads, function(idx, el) {\n\t\t\t\t\t\tvar $el = $(el);\n\t\t\t\t\t\tif ($el.is(\"[\" + attrs.defaultCol + \"]\")) {\n\t\t\t\t\t\t\tif (!$el.is(\".\" + classes.descend)) {\n\t\t\t\t\t\t\t\t$el.addClass(classes.ascend);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction addSwitcher(heads) {\n\t\t\t\t\t$switcher = $(\"<div>\")\n\t\t\t\t\t\t.addClass(classes.switcher)\n\t\t\t\t\t\t.addClass(classes.tableToolbar);\n\n\t\t\t\t\tvar html = [\"<label>\" + Tablesaw.i18n.sort + \":\"];\n\n\t\t\t\t\t// TODO next major version: remove .btn\n\t\t\t\t\thtml.push('<span class=\"btn tablesaw-btn\"><select>');\n\t\t\t\t\theads.each(function(j) {\n\t\t\t\t\t\tvar $t = $(this);\n\t\t\t\t\t\tvar isDefaultCol = $t.is(\"[\" + attrs.defaultCol + \"]\");\n\t\t\t\t\t\tvar isDescending = $t.is(\".\" + classes.descend);\n\n\t\t\t\t\t\tvar hasNumericAttribute = $t.is(\"[\" + attrs.numericCol + \"]\");\n\t\t\t\t\t\tvar numericCount = 0;\n\t\t\t\t\t\t// Check only the first four rows to see if the column is numbers.\n\t\t\t\t\t\tvar numericCountMax = 5;\n\n\t\t\t\t\t\t$(this.cells.slice(0, numericCountMax)).each(function() {\n\t\t\t\t\t\t\tif (!isNaN(parseInt(getSortValue(this), 10))) {\n\t\t\t\t\t\t\t\tnumericCount++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar isNumeric = numericCount === numericCountMax;\n\t\t\t\t\t\tif (!hasNumericAttribute) {\n\t\t\t\t\t\t\t$t.attr(attrs.numericCol, isNumeric ? \"\" : \"false\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thtml.push(\n\t\t\t\t\t\t\t\"<option\" +\n\t\t\t\t\t\t\t\t(isDefaultCol && !isDescending ? \" selected\" : \"\") +\n\t\t\t\t\t\t\t\t' value=\"' +\n\t\t\t\t\t\t\t\tj +\n\t\t\t\t\t\t\t\t'_asc\">' +\n\t\t\t\t\t\t\t\t$t.text() +\n\t\t\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t\t\t(isNumeric ? \"&#x2191;\" : \"(A-Z)\") +\n\t\t\t\t\t\t\t\t\"</option>\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\thtml.push(\n\t\t\t\t\t\t\t\"<option\" +\n\t\t\t\t\t\t\t\t(isDefaultCol && isDescending ? \" selected\" : \"\") +\n\t\t\t\t\t\t\t\t' value=\"' +\n\t\t\t\t\t\t\t\tj +\n\t\t\t\t\t\t\t\t'_desc\">' +\n\t\t\t\t\t\t\t\t$t.text() +\n\t\t\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t\t\t(isNumeric ? \"&#x2193;\" : \"(Z-A)\") +\n\t\t\t\t\t\t\t\t\"</option>\"\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\thtml.push(\"</select></span></label>\");\n\n\t\t\t\t\t$switcher.html(html.join(\"\"));\n\n\t\t\t\t\tvar $firstChild = tblsaw.$toolbar.children().eq(0);\n\t\t\t\t\tif ($firstChild.length) {\n\t\t\t\t\t\t$switcher.insertBefore($firstChild);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$switcher.appendTo(tblsaw.$toolbar);\n\t\t\t\t\t}\n\t\t\t\t\t$switcher.find(\".tablesaw-btn\").tablesawbtn();\n\t\t\t\t\t$switcher.find(\"select\").on(\"change\", function() {\n\t\t\t\t\t\tvar val = $(this)\n\t\t\t\t\t\t\t\t.val()\n\t\t\t\t\t\t\t\t.split(\"_\"),\n\t\t\t\t\t\t\thead = heads.eq(val[0]);\n\n\t\t\t\t\t\tclearOthers(head.siblings());\n\t\t\t\t\t\tel[pluginName](\"sortBy\", head.get(0), val[1] === \"asc\");\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tel.addClass(pluginName);\n\n\t\t\t\theads = el\n\t\t\t\t\t.children()\n\t\t\t\t\t.filter(\"thead\")\n\t\t\t\t\t.find(\"th[\" + attrs.sortCol + \"]\");\n\n\t\t\t\taddClassToHeads(heads);\n\t\t\t\tmakeHeadsActionable(heads, headsOnAction);\n\t\t\t\thandleDefault(heads);\n\n\t\t\t\tif (el.is(sortableSwitchSelector)) {\n\t\t\t\t\taddSwitcher(heads);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsortRows: function(rows, colNum, ascending, col, tbody) {\n\t\t\t\tfunction convertCells(cellArr, belongingToTbody) {\n\t\t\t\t\tvar cells = [];\n\t\t\t\t\t$.each(cellArr, function(i, cell) {\n\t\t\t\t\t\tvar row = cell.parentNode;\n\t\t\t\t\t\tvar $row = $(row);\n\t\t\t\t\t\t// next row is a subrow\n\t\t\t\t\t\tvar subrows = [];\n\t\t\t\t\t\tvar $next = $row.next();\n\t\t\t\t\t\twhile ($next.is(\"[\" + attrs.subRow + \"]\")) {\n\t\t\t\t\t\t\tsubrows.push($next[0]);\n\t\t\t\t\t\t\t$next = $next.next();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar tbody = row.parentNode;\n\n\t\t\t\t\t\t// current row is a subrow\n\t\t\t\t\t\tif ($row.is(\"[\" + attrs.subRow + \"]\")) {\n\t\t\t\t\t\t} else if (tbody === belongingToTbody) {\n\t\t\t\t\t\t\tcells.push({\n\t\t\t\t\t\t\t\telement: cell,\n\t\t\t\t\t\t\t\tcell: getSortValue(cell),\n\t\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\t\tsubrows: subrows.length ? subrows : null,\n\t\t\t\t\t\t\t\tignored: $row.is(\"[\" + attrs.ignoreRow + \"]\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn cells;\n\t\t\t\t}\n\n\t\t\t\tfunction getSortFxn(ascending, forceNumeric) {\n\t\t\t\t\tvar fn,\n\t\t\t\t\t\tregex = /[^\\-\\+\\d\\.]/g;\n\t\t\t\t\tif (ascending) {\n\t\t\t\t\t\tfn = function(a, b) {\n\t\t\t\t\t\t\tif (a.ignored || b.ignored) {\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (forceNumeric) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tparseFloat(a.cell.replace(regex, \"\")) - parseFloat(b.cell.replace(regex, \"\"))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn a.cell.toLowerCase() > b.cell.toLowerCase() ? 1 : -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfn = function(a, b) {\n\t\t\t\t\t\t\tif (a.ignored || b.ignored) {\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (forceNumeric) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tparseFloat(b.cell.replace(regex, \"\")) - parseFloat(a.cell.replace(regex, \"\"))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn a.cell.toLowerCase() < b.cell.toLowerCase() ? 1 : -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn fn;\n\t\t\t\t}\n\n\t\t\t\tfunction convertToRows(sorted) {\n\t\t\t\t\tvar newRows = [],\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tl;\n\t\t\t\t\tfor (i = 0, l = sorted.length; i < l; i++) {\n\t\t\t\t\t\tnewRows.push(sorted[i].row);\n\t\t\t\t\t\tif (sorted[i].subrows) {\n\t\t\t\t\t\t\tnewRows.push(sorted[i].subrows);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn newRows;\n\t\t\t\t}\n\n\t\t\t\tvar fn;\n\t\t\t\tvar sorted;\n\t\t\t\tvar cells = convertCells(col.cells, tbody);\n\n\t\t\t\tvar customFn = $(col).data(\"tablesaw-sort\");\n\n\t\t\t\tfn =\n\t\t\t\t\t(customFn && typeof customFn === \"function\" ? customFn(ascending) : false) ||\n\t\t\t\t\tgetSortFxn(\n\t\t\t\t\t\tascending,\n\t\t\t\t\t\t$(col).is(\"[\" + attrs.numericCol + \"]\") &&\n\t\t\t\t\t\t\t!$(col).is(\"[\" + attrs.numericCol + '=\"false\"]')\n\t\t\t\t\t);\n\n\t\t\t\tsorted = cells.sort(fn);\n\n\t\t\t\trows = convertToRows(sorted);\n\n\t\t\t\treturn rows;\n\t\t\t},\n\t\t\tmakeColDefault: function(col, a) {\n\t\t\t\tvar c = $(col);\n\t\t\t\tc.attr(attrs.defaultCol, \"true\");\n\t\t\t\tif (a) {\n\t\t\t\t\tc.removeClass(classes.descend);\n\t\t\t\t\tc.addClass(classes.ascend);\n\t\t\t\t} else {\n\t\t\t\t\tc.removeClass(classes.ascend);\n\t\t\t\t\tc.addClass(classes.descend);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsortBy: function(col, ascending) {\n\t\t\t\tvar el = $(this);\n\t\t\t\tvar colNum;\n\t\t\t\tvar tbl = el.data(\"tablesaw\");\n\t\t\t\ttbl.$tbody.each(function() {\n\t\t\t\t\tvar tbody = this;\n\t\t\t\t\tvar $tbody = $(this);\n\t\t\t\t\tvar rows = tbl.getBodyRows(tbody);\n\t\t\t\t\tvar sortedRows;\n\t\t\t\t\tvar map = tbl.headerMapping[0];\n\t\t\t\t\tvar j, k;\n\n\t\t\t\t\t// find the column number that we’re sorting\n\t\t\t\t\tfor (j = 0, k = map.length; j < k; j++) {\n\t\t\t\t\t\tif (map[j] === col) {\n\t\t\t\t\t\t\tcolNum = j;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsortedRows = el[pluginName](\"sortRows\", rows, colNum, ascending, col, tbody);\n\n\t\t\t\t\t// replace Table rows\n\t\t\t\t\tfor (j = 0, k = sortedRows.length; j < k; j++) {\n\t\t\t\t\t\t$tbody.append(sortedRows[j]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tel[pluginName](\"makeColDefault\", col, ascending);\n\n\t\t\t\tel.trigger(\"tablesaw-sorted\");\n\t\t\t}\n\t\t};\n\n\t// Collection method.\n\t$.fn[pluginName] = function(arrg) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1),\n\t\t\treturnVal;\n\n\t\t// if it's a method\n\t\tif (arrg && typeof arrg === \"string\") {\n\t\t\treturnVal = $.fn[pluginName].prototype[arrg].apply(this[0], args);\n\t\t\treturn typeof returnVal !== \"undefined\" ? returnVal : $(this);\n\t\t}\n\t\t// check init\n\t\tif (!$(this).data(pluginName + \"-active\")) {\n\t\t\t$(this).data(pluginName + \"-active\", true);\n\t\t\t$.fn[pluginName].prototype._create.call(this, arrg);\n\t\t}\n\t\treturn $(this);\n\t};\n\t// add methods\n\t$.extend($.fn[pluginName].prototype, methods);\n\n\t$(document).on(Tablesaw.events.create, function(e, Tablesaw) {\n\t\tif (Tablesaw.$table.is(initSelector)) {\n\t\t\tTablesaw.$table[pluginName]();\n\t\t}\n\t});\n\n\t// TODO OOP this and add to Tablesaw object\n})();\n\n(function() {\n\tvar classes = {\n\t\thideBtn: \"disabled\",\n\t\tpersistWidths: \"tablesaw-fix-persist\",\n\t\thiddenCol: \"tablesaw-swipe-cellhidden\",\n\t\tpersistCol: \"tablesaw-swipe-cellpersist\",\n\t\tallColumnsVisible: \"tablesaw-all-cols-visible\"\n\t};\n\tvar attrs = {\n\t\tdisableTouchEvents: \"data-tablesaw-no-touch\",\n\t\tignorerow: \"data-tablesaw-ignorerow\",\n\t\tsubrow: \"data-tablesaw-subrow\"\n\t};\n\n\tfunction createSwipeTable(tbl, $table) {\n\t\tvar tblsaw = $table.data(\"tablesaw\");\n\n\t\tvar $btns = $(\"<div class='tablesaw-advance'></div>\");\n\t\t// TODO next major version: remove .btn\n\t\tvar $prevBtn = $(\n\t\t\t\"<a href='#' class='btn tablesaw-nav-btn tablesaw-btn btn-micro left'>\" +\n\t\t\t\tTablesaw.i18n.swipePreviousColumn +\n\t\t\t\t\"</a>\"\n\t\t).appendTo($btns);\n\t\t// TODO next major version: remove .btn\n\t\tvar $nextBtn = $(\n\t\t\t\"<a href='#' class='btn tablesaw-nav-btn tablesaw-btn btn-micro right'>\" +\n\t\t\t\tTablesaw.i18n.swipeNextColumn +\n\t\t\t\t\"</a>\"\n\t\t).appendTo($btns);\n\n\t\tvar $headerCells = tbl._getPrimaryHeaderCells();\n\t\tvar $headerCellsNoPersist = $headerCells.not('[data-tablesaw-priority=\"persist\"]');\n\t\tvar headerWidths = [];\n\t\tvar $head = $(document.head || \"head\");\n\t\tvar tableId = $table.attr(\"id\");\n\n\t\tif (!$headerCells.length) {\n\t\t\tthrow new Error(\"tablesaw swipe: no header cells found.\");\n\t\t}\n\n\t\t$table.addClass(\"tablesaw-swipe\");\n\n\t\tfunction initMinHeaderWidths() {\n\t\t\t$table.css({\n\t\t\t\twidth: \"1px\"\n\t\t\t});\n\n\t\t\t// remove any hidden columns\n\t\t\t$table.find(\".\" + classes.hiddenCol).removeClass(classes.hiddenCol);\n\n\t\t\theaderWidths = [];\n\t\t\t// Calculate initial widths\n\t\t\t$headerCells.each(function() {\n\t\t\t\theaderWidths.push(this.offsetWidth);\n\t\t\t});\n\n\t\t\t// reset props\n\t\t\t$table.css({\n\t\t\t\twidth: \"\"\n\t\t\t});\n\t\t}\n\n\t\tinitMinHeaderWidths();\n\n\t\t$btns.appendTo(tblsaw.$toolbar);\n\n\t\tif (!tableId) {\n\t\t\ttableId = \"tableswipe-\" + Math.round(Math.random() * 10000);\n\t\t\t$table.attr(\"id\", tableId);\n\t\t}\n\n\t\tfunction showColumn(headerCell) {\n\t\t\ttblsaw._$getCells(headerCell).removeClass(classes.hiddenCol);\n\t\t}\n\n\t\tfunction hideColumn(headerCell) {\n\t\t\ttblsaw._$getCells(headerCell).addClass(classes.hiddenCol);\n\t\t}\n\n\t\tfunction persistColumn(headerCell) {\n\t\t\ttblsaw._$getCells(headerCell).addClass(classes.persistCol);\n\t\t}\n\n\t\tfunction isPersistent(headerCell) {\n\t\t\treturn $(headerCell).is('[data-tablesaw-priority=\"persist\"]');\n\t\t}\n\n\t\tfunction unmaintainWidths() {\n\t\t\t$table.removeClass(classes.persistWidths);\n\t\t\t$(\"#\" + tableId + \"-persist\").remove();\n\t\t}\n\n\t\tfunction maintainWidths() {\n\t\t\tvar prefix = \"#\" + tableId + \".tablesaw-swipe \",\n\t\t\t\tstyles = [],\n\t\t\t\ttableWidth = $table.width(),\n\t\t\t\thash = [],\n\t\t\t\tnewHash;\n\n\t\t\t// save persistent column widths (as long as they take up less than 75% of table width)\n\t\t\t$headerCells.each(function(index) {\n\t\t\t\tvar width;\n\t\t\t\tif (isPersistent(this)) {\n\t\t\t\t\twidth = this.offsetWidth;\n\n\t\t\t\t\tif (width < tableWidth * 0.75) {\n\t\t\t\t\t\thash.push(index + \"-\" + width);\n\t\t\t\t\t\tstyles.push(\n\t\t\t\t\t\t\tprefix +\n\t\t\t\t\t\t\t\t\" .\" +\n\t\t\t\t\t\t\t\tclasses.persistCol +\n\t\t\t\t\t\t\t\t\":nth-child(\" +\n\t\t\t\t\t\t\t\t(index + 1) +\n\t\t\t\t\t\t\t\t\") { width: \" +\n\t\t\t\t\t\t\t\twidth +\n\t\t\t\t\t\t\t\t\"px; }\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tnewHash = hash.join(\"_\");\n\n\t\t\tif (styles.length) {\n\t\t\t\t$table.addClass(classes.persistWidths);\n\t\t\t\tvar $style = $(\"#\" + tableId + \"-persist\");\n\t\t\t\t// If style element not yet added OR if the widths have changed\n\t\t\t\tif (!$style.length || $style.data(\"tablesaw-hash\") !== newHash) {\n\t\t\t\t\t// Remove existing\n\t\t\t\t\t$style.remove();\n\n\t\t\t\t\t$(\"<style>\" + styles.join(\"\\n\") + \"</style>\")\n\t\t\t\t\t\t.attr(\"id\", tableId + \"-persist\")\n\t\t\t\t\t\t.data(\"tablesaw-hash\", newHash)\n\t\t\t\t\t\t.appendTo($head);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getNext() {\n\t\t\tvar next = [],\n\t\t\t\tcheckFound;\n\n\t\t\t$headerCellsNoPersist.each(function(i) {\n\t\t\t\tvar $t = $(this),\n\t\t\t\t\tisHidden = $t.css(\"display\") === \"none\" || $t.is(\".\" + classes.hiddenCol);\n\n\t\t\t\tif (!isHidden && !checkFound) {\n\t\t\t\t\tcheckFound = true;\n\t\t\t\t\tnext[0] = i;\n\t\t\t\t} else if (isHidden && checkFound) {\n\t\t\t\t\tnext[1] = i;\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn next;\n\t\t}\n\n\t\tfunction getPrev() {\n\t\t\tvar next = getNext();\n\t\t\treturn [next[1] - 1, next[0] - 1];\n\t\t}\n\n\t\tfunction nextpair(fwd) {\n\t\t\treturn fwd ? getNext() : getPrev();\n\t\t}\n\n\t\tfunction canAdvance(pair) {\n\t\t\treturn pair[1] > -1 && pair[1] < $headerCellsNoPersist.length;\n\t\t}\n\n\t\tfunction matchesMedia() {\n\t\t\tvar matchMedia = $table.attr(\"data-tablesaw-swipe-media\");\n\t\t\treturn !matchMedia || (\"matchMedia\" in window && window.matchMedia(matchMedia).matches);\n\t\t}\n\n\t\tfunction fakeBreakpoints() {\n\t\t\tif (!matchesMedia()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar containerWidth = $table.parent().width(),\n\t\t\t\tpersist = [],\n\t\t\t\tsum = 0,\n\t\t\t\tsums = [],\n\t\t\t\tvisibleNonPersistantCount = $headerCells.length;\n\n\t\t\t$headerCells.each(function(index) {\n\t\t\t\tvar $t = $(this),\n\t\t\t\t\tisPersist = $t.is('[data-tablesaw-priority=\"persist\"]');\n\n\t\t\t\tpersist.push(isPersist);\n\t\t\t\tsum += headerWidths[index];\n\t\t\t\tsums.push(sum);\n\n\t\t\t\t// is persistent or is hidden\n\t\t\t\tif (isPersist || sum > containerWidth) {\n\t\t\t\t\tvisibleNonPersistantCount--;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// We need at least one column to swipe.\n\t\t\tvar needsNonPersistentColumn = visibleNonPersistantCount === 0;\n\n\t\t\t$headerCells.each(function(index) {\n\t\t\t\tif (sums[index] > containerWidth) {\n\t\t\t\t\thideColumn(this);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$headerCells.each(function(index) {\n\t\t\t\tif (persist[index]) {\n\t\t\t\t\t// for visual box-shadow\n\t\t\t\t\tpersistColumn(this);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (sums[index] <= containerWidth || needsNonPersistentColumn) {\n\t\t\t\t\tneedsNonPersistentColumn = false;\n\t\t\t\t\tshowColumn(this);\n\t\t\t\t\ttblsaw.updateColspanCells(classes.hiddenCol, this, true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tunmaintainWidths();\n\n\t\t\t$table.trigger(\"tablesawcolumns\");\n\t\t}\n\n\t\tfunction advance(fwd) {\n\t\t\tvar pair = nextpair(fwd);\n\t\t\tif (canAdvance(pair)) {\n\t\t\t\tif (isNaN(pair[0])) {\n\t\t\t\t\tif (fwd) {\n\t\t\t\t\t\tpair[0] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpair[0] = $headerCellsNoPersist.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// TODO just blindly hiding the previous column and showing the next column can result in\n\t\t\t\t// column content overflow\n\t\t\t\tmaintainWidths();\n\t\t\t\thideColumn($headerCellsNoPersist.get(pair[0]));\n\t\t\t\ttblsaw.updateColspanCells(classes.hiddenCol, $headerCellsNoPersist.get(pair[0]), false);\n\n\t\t\t\tshowColumn($headerCellsNoPersist.get(pair[1]));\n\t\t\t\ttblsaw.updateColspanCells(classes.hiddenCol, $headerCellsNoPersist.get(pair[1]), true);\n\n\t\t\t\t$table.trigger(\"tablesawcolumns\");\n\t\t\t}\n\t\t}\n\n\t\t$prevBtn.add($nextBtn).on(\"click\", function(e) {\n\t\t\tadvance(!!$(e.target).closest($nextBtn).length);\n\t\t\te.preventDefault();\n\t\t});\n\n\t\tfunction getCoord(event, key) {\n\t\t\treturn (event.touches || event.originalEvent.touches)[0][key];\n\t\t}\n\n\t\tif (!$table.is(\"[\" + attrs.disableTouchEvents + \"]\")) {\n\t\t\t$table.on(\"touchstart.swipetoggle\", function(e) {\n\t\t\t\tvar originX = getCoord(e, \"pageX\");\n\t\t\t\tvar originY = getCoord(e, \"pageY\");\n\t\t\t\tvar x;\n\t\t\t\tvar y;\n\t\t\t\tvar scrollTop = window.pageYOffset;\n\n\t\t\t\t$(window).off(Tablesaw.events.resize, fakeBreakpoints);\n\n\t\t\t\t$(this)\n\t\t\t\t\t.on(\"touchmove.swipetoggle\", function(e) {\n\t\t\t\t\t\tx = getCoord(e, \"pageX\");\n\t\t\t\t\t\ty = getCoord(e, \"pageY\");\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"touchend.swipetoggle\", function() {\n\t\t\t\t\t\tvar cfg = tbl.getConfig({\n\t\t\t\t\t\t\tswipeHorizontalThreshold: 30,\n\t\t\t\t\t\t\tswipeVerticalThreshold: 30\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// This config code is a little awkward because shoestring doesn’t support deep $.extend\n\t\t\t\t\t\t// Trying to work around when devs only override one of (not both) horizontalThreshold or\n\t\t\t\t\t\t// verticalThreshold in their TablesawConfig.\n\t\t\t\t\t\t// @TODO major version bump: remove cfg.swipe, move to just use the swipePrefix keys\n\t\t\t\t\t\tvar verticalThreshold = cfg.swipe\n\t\t\t\t\t\t\t? cfg.swipe.verticalThreshold\n\t\t\t\t\t\t\t: cfg.swipeVerticalThreshold;\n\t\t\t\t\t\tvar horizontalThreshold = cfg.swipe\n\t\t\t\t\t\t\t? cfg.swipe.horizontalThreshold\n\t\t\t\t\t\t\t: cfg.swipeHorizontalThreshold;\n\n\t\t\t\t\t\tvar isPageScrolled = Math.abs(window.pageYOffset - scrollTop) >= verticalThreshold;\n\t\t\t\t\t\tvar isVerticalSwipe = Math.abs(y - originY) >= verticalThreshold;\n\n\t\t\t\t\t\tif (!isVerticalSwipe && !isPageScrolled) {\n\t\t\t\t\t\t\tif (x - originX < -1 * horizontalThreshold) {\n\t\t\t\t\t\t\t\tadvance(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (x - originX > horizontalThreshold) {\n\t\t\t\t\t\t\t\tadvance(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\t\t$(window).on(Tablesaw.events.resize, fakeBreakpoints);\n\t\t\t\t\t\t}, 300);\n\n\t\t\t\t\t\t$(this).off(\"touchmove.swipetoggle touchend.swipetoggle\");\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t$table\n\t\t\t.on(\"tablesawcolumns.swipetoggle\", function() {\n\t\t\t\tvar canGoPrev = canAdvance(getPrev());\n\t\t\t\tvar canGoNext = canAdvance(getNext());\n\t\t\t\t$prevBtn[canGoPrev ? \"removeClass\" : \"addClass\"](classes.hideBtn);\n\t\t\t\t$nextBtn[canGoNext ? \"removeClass\" : \"addClass\"](classes.hideBtn);\n\n\t\t\t\ttblsaw.$toolbar[!canGoPrev && !canGoNext ? \"addClass\" : \"removeClass\"](\n\t\t\t\t\tclasses.allColumnsVisible\n\t\t\t\t);\n\t\t\t})\n\t\t\t.on(\"tablesawnext.swipetoggle\", function() {\n\t\t\t\tadvance(true);\n\t\t\t})\n\t\t\t.on(\"tablesawprev.swipetoggle\", function() {\n\t\t\t\tadvance(false);\n\t\t\t})\n\t\t\t.on(Tablesaw.events.destroy + \".swipetoggle\", function() {\n\t\t\t\tvar $t = $(this);\n\n\t\t\t\t$t.removeClass(\"tablesaw-swipe\");\n\t\t\t\ttblsaw.$toolbar.find(\".tablesaw-advance\").remove();\n\t\t\t\t$(window).off(Tablesaw.events.resize, fakeBreakpoints);\n\n\t\t\t\t$t.off(\".swipetoggle\");\n\t\t\t})\n\t\t\t.on(Tablesaw.events.refresh, function() {\n\t\t\t\tunmaintainWidths();\n\t\t\t\tinitMinHeaderWidths();\n\t\t\t\tfakeBreakpoints();\n\t\t\t});\n\n\t\tfakeBreakpoints();\n\t\t$(window).on(Tablesaw.events.resize, fakeBreakpoints);\n\t}\n\n\t// on tablecreate, init\n\t$(document).on(Tablesaw.events.create, function(e, tablesaw) {\n\t\tif (tablesaw.mode === \"swipe\") {\n\t\t\tcreateSwipeTable(tablesaw, tablesaw.$table);\n\t\t}\n\t});\n\n\t// TODO OOP this and add to Tablesaw object\n})();\n\n(function() {\n\tvar MiniMap = {\n\t\tattr: {\n\t\t\tinit: \"data-tablesaw-minimap\"\n\t\t},\n\t\tshow: function(table) {\n\t\t\tvar mq = table.getAttribute(MiniMap.attr.init);\n\n\t\t\tif (mq === \"\") {\n\t\t\t\t// value-less but exists\n\t\t\t\treturn true;\n\t\t\t} else if (mq && \"matchMedia\" in window) {\n\t\t\t\t// has a mq value\n\t\t\t\treturn window.matchMedia(mq).matches;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tfunction createMiniMap($table) {\n\t\tvar tblsaw = $table.data(\"tablesaw\");\n\t\tvar $btns = $('<div class=\"tablesaw-advance minimap\">');\n\t\tvar $dotNav = $('<ul class=\"tablesaw-advance-dots\">').appendTo($btns);\n\t\tvar hideDot = \"tablesaw-advance-dots-hide\";\n\t\tvar $headerCells = $table.data(\"tablesaw\")._getPrimaryHeaderCells();\n\n\t\t// populate dots\n\t\t$headerCells.each(function() {\n\t\t\t$dotNav.append(\"<li><i></i></li>\");\n\t\t});\n\n\t\t$btns.appendTo(tblsaw.$toolbar);\n\n\t\tfunction showHideNav() {\n\t\t\tif (!MiniMap.show($table[0])) {\n\t\t\t\t$btns.css(\"display\", \"none\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$btns.css(\"display\", \"block\");\n\n\t\t\t// show/hide dots\n\t\t\tvar dots = $dotNav.find(\"li\").removeClass(hideDot);\n\t\t\t$table.find(\"thead th\").each(function(i) {\n\t\t\t\tif ($(this).css(\"display\") === \"none\") {\n\t\t\t\t\tdots.eq(i).addClass(hideDot);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// run on init and resize\n\t\tshowHideNav();\n\t\t$(window).on(Tablesaw.events.resize, showHideNav);\n\n\t\t$table\n\t\t\t.on(\"tablesawcolumns.minimap\", function() {\n\t\t\t\tshowHideNav();\n\t\t\t})\n\t\t\t.on(Tablesaw.events.destroy + \".minimap\", function() {\n\t\t\t\tvar $t = $(this);\n\n\t\t\t\ttblsaw.$toolbar.find(\".tablesaw-advance\").remove();\n\t\t\t\t$(window).off(Tablesaw.events.resize, showHideNav);\n\n\t\t\t\t$t.off(\".minimap\");\n\t\t\t});\n\t}\n\n\t// on tablecreate, init\n\t$(document).on(Tablesaw.events.create, function(e, tablesaw) {\n\t\tif (\n\t\t\t(tablesaw.mode === \"swipe\" || tablesaw.mode === \"columntoggle\") &&\n\t\t\ttablesaw.$table.is(\"[ \" + MiniMap.attr.init + \"]\")\n\t\t) {\n\t\t\tcreateMiniMap(tablesaw.$table);\n\t\t}\n\t});\n\n\t// TODO OOP this better\n\tTablesaw.MiniMap = MiniMap;\n})();\n\n(function() {\n\tvar S = {\n\t\tselectors: {\n\t\t\tinit: \"table[data-tablesaw-mode-switch]\"\n\t\t},\n\t\tattributes: {\n\t\t\texcludeMode: \"data-tablesaw-mode-exclude\"\n\t\t},\n\t\tclasses: {\n\t\t\tmain: \"tablesaw-modeswitch\",\n\t\t\ttoolbar: \"tablesaw-bar-section\"\n\t\t},\n\t\tmodes: [\"stack\", \"swipe\", \"columntoggle\"],\n\t\tinit: function(table) {\n\t\t\tvar $table = $(table);\n\t\t\tvar tblsaw = $table.data(\"tablesaw\");\n\t\t\tvar ignoreMode = $table.attr(S.attributes.excludeMode);\n\t\t\tvar $toolbar = tblsaw.$toolbar;\n\t\t\tvar $switcher = $(\"<div>\").addClass(S.classes.main + \" \" + S.classes.toolbar);\n\n\t\t\tvar html = [\n\t\t\t\t\t'<label><span class=\"abbreviated\">' +\n\t\t\t\t\t\tTablesaw.i18n.modeSwitchColumnsAbbreviated +\n\t\t\t\t\t\t'</span><span class=\"longform\">' +\n\t\t\t\t\t\tTablesaw.i18n.modeSwitchColumns +\n\t\t\t\t\t\t\"</span>:\"\n\t\t\t\t],\n\t\t\t\tdataMode = $table.attr(\"data-tablesaw-mode\"),\n\t\t\t\tisSelected;\n\n\t\t\t// TODO next major version: remove .btn\n\t\t\thtml.push('<span class=\"btn tablesaw-btn\"><select>');\n\t\t\tfor (var j = 0, k = S.modes.length; j < k; j++) {\n\t\t\t\tif (ignoreMode && ignoreMode.toLowerCase() === S.modes[j]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisSelected = dataMode === S.modes[j];\n\n\t\t\t\thtml.push(\n\t\t\t\t\t\"<option\" +\n\t\t\t\t\t\t(isSelected ? \" selected\" : \"\") +\n\t\t\t\t\t\t' value=\"' +\n\t\t\t\t\t\tS.modes[j] +\n\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\tTablesaw.i18n.modes[j] +\n\t\t\t\t\t\t\"</option>\"\n\t\t\t\t);\n\t\t\t}\n\t\t\thtml.push(\"</select></span></label>\");\n\n\t\t\t$switcher.html(html.join(\"\"));\n\n\t\t\tvar $otherToolbarItems = $toolbar.find(\".tablesaw-advance\").eq(0);\n\t\t\tif ($otherToolbarItems.length) {\n\t\t\t\t$switcher.insertBefore($otherToolbarItems);\n\t\t\t} else {\n\t\t\t\t$switcher.appendTo($toolbar);\n\t\t\t}\n\n\t\t\t$switcher.find(\".tablesaw-btn\").tablesawbtn();\n\t\t\t$switcher.find(\"select\").on(\"change\", function(event) {\n\t\t\t\treturn S.onModeChange.call(table, event, $(this).val());\n\t\t\t});\n\t\t},\n\t\tonModeChange: function(event, val) {\n\t\t\tvar $table = $(this);\n\t\t\tvar tblsaw = $table.data(\"tablesaw\");\n\t\t\tvar $switcher = tblsaw.$toolbar.find(\".\" + S.classes.main);\n\n\t\t\t$switcher.remove();\n\t\t\ttblsaw.destroy();\n\n\t\t\t$table.attr(\"data-tablesaw-mode\", val);\n\t\t\t$table.tablesaw();\n\t\t}\n\t};\n\n\t$(document).on(Tablesaw.events.create, function(e, Tablesaw) {\n\t\tif (Tablesaw.$table.is(S.selectors.init)) {\n\t\t\tS.init(Tablesaw.table);\n\t\t}\n\t});\n\n\t// TODO OOP this and add to Tablesaw object\n})();\n\n(function() {\n\tvar pluginName = \"tablesawCheckAll\";\n\n\tfunction CheckAll(tablesaw) {\n\t\tthis.tablesaw = tablesaw;\n\t\tthis.$table = tablesaw.$table;\n\n\t\tthis.attr = \"data-tablesaw-checkall\";\n\t\tthis.checkAllSelector = \"[\" + this.attr + \"]\";\n\t\tthis.forceCheckedSelector = \"[\" + this.attr + \"-checked]\";\n\t\tthis.forceUncheckedSelector = \"[\" + this.attr + \"-unchecked]\";\n\t\tthis.checkboxSelector = 'input[type=\"checkbox\"]';\n\n\t\tthis.$triggers = null;\n\t\tthis.$checkboxes = null;\n\n\t\tif (this.$table.data(pluginName)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.$table.data(pluginName, this);\n\t\tthis.init();\n\t}\n\n\tCheckAll.prototype._filterCells = function($checkboxes) {\n\t\treturn $checkboxes\n\t\t\t.filter(function() {\n\t\t\t\treturn !$(this)\n\t\t\t\t\t.closest(\"tr\")\n\t\t\t\t\t.is(\"[data-tablesaw-subrow],[data-tablesaw-ignorerow]\");\n\t\t\t})\n\t\t\t.find(this.checkboxSelector)\n\t\t\t.not(this.checkAllSelector);\n\t};\n\n\t// With buttons you can use a scoping selector like: data-tablesaw-checkall=\"#my-scoped-id input[type='checkbox']\"\n\tCheckAll.prototype.getCheckboxesForButton = function(button) {\n\t\treturn this._filterCells($($(button).attr(this.attr)));\n\t};\n\n\tCheckAll.prototype.getCheckboxesForCheckbox = function(checkbox) {\n\t\treturn this._filterCells($($(checkbox).closest(\"th\")[0].cells));\n\t};\n\n\tCheckAll.prototype.init = function() {\n\t\tvar self = this;\n\t\tthis.$table.find(this.checkAllSelector).each(function() {\n\t\t\tvar $trigger = $(this);\n\t\t\tif ($trigger.is(self.checkboxSelector)) {\n\t\t\t\tself.addCheckboxEvents(this);\n\t\t\t} else {\n\t\t\t\tself.addButtonEvents(this);\n\t\t\t}\n\t\t});\n\t};\n\n\tCheckAll.prototype.addButtonEvents = function(trigger) {\n\t\tvar self = this;\n\n\t\t// Update body checkboxes when header checkbox is changed\n\t\t$(trigger).on(\"click\", function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tvar $checkboxes = self.getCheckboxesForButton(this);\n\n\t\t\tvar allChecked = true;\n\t\t\t$checkboxes.each(function() {\n\t\t\t\tif (!this.checked) {\n\t\t\t\t\tallChecked = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar setChecked;\n\t\t\tif ($(this).is(self.forceCheckedSelector)) {\n\t\t\t\tsetChecked = true;\n\t\t\t} else if ($(this).is(self.forceUncheckedSelector)) {\n\t\t\t\tsetChecked = false;\n\t\t\t} else {\n\t\t\t\tsetChecked = allChecked ? false : true;\n\t\t\t}\n\n\t\t\t$checkboxes.each(function() {\n\t\t\t\tthis.checked = setChecked;\n\n\t\t\t\t$(this).trigger(\"change.\" + pluginName);\n\t\t\t});\n\t\t});\n\t};\n\n\tCheckAll.prototype.addCheckboxEvents = function(trigger) {\n\t\tvar self = this;\n\n\t\t// Update body checkboxes when header checkbox is changed\n\t\t$(trigger).on(\"change\", function() {\n\t\t\tvar setChecked = this.checked;\n\n\t\t\tself.getCheckboxesForCheckbox(this).each(function() {\n\t\t\t\tthis.checked = setChecked;\n\t\t\t});\n\t\t});\n\n\t\tvar $checkboxes = self.getCheckboxesForCheckbox(trigger);\n\n\t\t// Update header checkbox when body checkboxes are changed\n\t\t$checkboxes.on(\"change.\" + pluginName, function() {\n\t\t\tvar checkedCount = 0;\n\t\t\t$checkboxes.each(function() {\n\t\t\t\tif (this.checked) {\n\t\t\t\t\tcheckedCount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar allSelected = checkedCount === $checkboxes.length;\n\n\t\t\ttrigger.checked = allSelected;\n\n\t\t\t// only indeterminate if some are selected (not all and not none)\n\t\t\ttrigger.indeterminate = checkedCount !== 0 && !allSelected;\n\t\t});\n\t};\n\n\t// on tablecreate, init\n\t$(document).on(Tablesaw.events.create, function(e, tablesaw) {\n\t\tnew CheckAll(tablesaw);\n\t});\n\n\tTablesaw.CheckAll = CheckAll;\n})();\n\n\treturn Tablesaw;\n}));\n","/* jshint ignore:start */\n\n/*! Tablesaw - v3.1.0 - 2018-12-10\n* https://github.com/filamentgroup/tablesaw\n* Copyright (c) 2018 Filament Group; Licensed MIT */\n(function(win) {\n\t\"use strict\";\n\n\t// DOM-ready auto-init of plugins.\n\t// Many plugins bind to an \"enhance\" event to init themselves on dom ready, or when new markup is inserted into the DOM\n\t// Use raw DOMContentLoaded instead of shoestring (may have issues in Android 2.3, exhibited by stack table)\n\tif (!(\"Tablesaw\" in win)) {\n\t\tthrow new Error(\"Tablesaw library not found.\");\n\t}\n\tif (!(\"init\" in Tablesaw)) {\n\t\tthrow new Error(\"Your tablesaw-init.js is newer than the core Tablesaw version.\");\n\t}\n\n\tTablesaw.init();\n})(typeof window !== \"undefined\" ? window : this);\n"],"sourceRoot":"assets/scripts/"}